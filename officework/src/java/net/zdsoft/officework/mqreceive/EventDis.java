// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: event_dis.proto

package net.zdsoft.officework.mqreceive;

import java.util.List;
import java.util.Map;

import com.alibaba.fastjson.JSONObject;
import com.google.protobuf.Descriptors.FieldDescriptor;

public final class EventDis {
	private EventDis() {
	}

	public static void registerAllExtensions(
			com.google.protobuf.ExtensionRegistry registry) {
	}

	public interface CommEventLogOrBuilder extends
	// @@protoc_insertion_point(interface_extends:net.zdsoft.officework.mqreceive.CommEventLog)
			com.google.protobuf.MessageOrBuilder {

		/**
		 * <code>required string log_id = 1;</code>
		 *
		 * <pre>
		 * 日志Id，唯一标识一次发生的事件
		 * </pre>
		 */
		boolean hasLogId();

		/**
		 * <code>required string log_id = 1;</code>
		 *
		 * <pre>
		 * 日志Id，唯一标识一次发生的事件
		 * </pre>
		 */
		java.lang.String getLogId();

		/**
		 * <code>required string log_id = 1;</code>
		 *
		 * <pre>
		 * 日志Id，唯一标识一次发生的事件
		 * </pre>
		 */
		com.google.protobuf.ByteString getLogIdBytes();

		/**
		 * <code>required int32 event_state = 2;</code>
		 *
		 * <pre>
		 * 事件状态，事件状态为开始或者瞬时时保存事件，状态为结束时更新日志结束时间，状态为更新时保存联动结果
		 * </pre>
		 */
		boolean hasEventState();

		/**
		 * <code>required int32 event_state = 2;</code>
		 *
		 * <pre>
		 * 事件状态，事件状态为开始或者瞬时时保存事件，状态为结束时更新日志结束时间，状态为更新时保存联动结果
		 * </pre>
		 */
		int getEventState();

		/**
		 * <code>optional int32 event_level = 3;</code>
		 *
		 * <pre>
		 * 事件等级
		 * </pre>
		 */
		boolean hasEventLevel();

		/**
		 * <code>optional int32 event_level = 3;</code>
		 *
		 * <pre>
		 * 事件等级
		 * </pre>
		 */
		int getEventLevel();

		/**
		 * <code>optional string unit_idx = 4;</code>
		 *
		 * <pre>
		 * 控制中心编号
		 * </pre>
		 */
		boolean hasUnitIdx();

		/**
		 * <code>optional string unit_idx = 4;</code>
		 *
		 * <pre>
		 * 控制中心编号
		 * </pre>
		 */
		java.lang.String getUnitIdx();

		/**
		 * <code>optional string unit_idx = 4;</code>
		 *
		 * <pre>
		 * 控制中心编号
		 * </pre>
		 */
		com.google.protobuf.ByteString getUnitIdxBytes();

		/**
		 * <code>optional int32 event_type = 5;</code>
		 *
		 * <pre>
		 * 事件类型
		 * </pre>
		 */
		boolean hasEventType();

		/**
		 * <code>optional int32 event_type = 5;</code>
		 *
		 * <pre>
		 * 事件类型
		 * </pre>
		 */
		int getEventType();

		/**
		 * <code>optional string event_type_name = 6;</code>
		 *
		 * <pre>
		 * 事件类型名称
		 * </pre>
		 */
		boolean hasEventTypeName();

		/**
		 * <code>optional string event_type_name = 6;</code>
		 *
		 * <pre>
		 * 事件类型名称
		 * </pre>
		 */
		java.lang.String getEventTypeName();

		/**
		 * <code>optional string event_type_name = 6;</code>
		 *
		 * <pre>
		 * 事件类型名称
		 * </pre>
		 */
		com.google.protobuf.ByteString getEventTypeNameBytes();

		/**
		 * <code>optional int32 sub_sys_type = 7;</code>
		 *
		 * <pre>
		 * 事件所属子系统类型，废弃，事件整改，没有子系统属性了2015-10-28 13:45:13
		 * </pre>
		 */
		boolean hasSubSysType();

		/**
		 * <code>optional int32 sub_sys_type = 7;</code>
		 *
		 * <pre>
		 * 事件所属子系统类型，废弃，事件整改，没有子系统属性了2015-10-28 13:45:13
		 * </pre>
		 */
		int getSubSysType();

		/**
		 * <code>optional string event_name = 8;</code>
		 *
		 * <pre>
		 * 事件名称
		 * </pre>
		 */
		boolean hasEventName();

		/**
		 * <code>optional string event_name = 8;</code>
		 *
		 * <pre>
		 * 事件名称
		 * </pre>
		 */
		java.lang.String getEventName();

		/**
		 * <code>optional string event_name = 8;</code>
		 *
		 * <pre>
		 * 事件名称
		 * </pre>
		 */
		com.google.protobuf.ByteString getEventNameBytes();

		/**
		 * <code>optional string start_time = 9;</code>
		 *
		 * <pre>
		 * 开始时间
		 * </pre>
		 */
		boolean hasStartTime();

		/**
		 * <code>optional string start_time = 9;</code>
		 *
		 * <pre>
		 * 开始时间
		 * </pre>
		 */
		java.lang.String getStartTime();

		/**
		 * <code>optional string start_time = 9;</code>
		 *
		 * <pre>
		 * 开始时间
		 * </pre>
		 */
		com.google.protobuf.ByteString getStartTimeBytes();

		/**
		 * <code>optional string stop_time = 10;</code>
		 *
		 * <pre>
		 * 结束时间
		 * </pre>
		 */
		boolean hasStopTime();

		/**
		 * <code>optional string stop_time = 10;</code>
		 *
		 * <pre>
		 * 结束时间
		 * </pre>
		 */
		java.lang.String getStopTime();

		/**
		 * <code>optional string stop_time = 10;</code>
		 *
		 * <pre>
		 * 结束时间
		 * </pre>
		 */
		com.google.protobuf.ByteString getStopTimeBytes();

		/**
		 * <code>optional string source_idx = 11;</code>
		 *
		 * <pre>
		 * 事件源编号
		 * </pre>
		 */
		boolean hasSourceIdx();

		/**
		 * <code>optional string source_idx = 11;</code>
		 *
		 * <pre>
		 * 事件源编号
		 * </pre>
		 */
		java.lang.String getSourceIdx();

		/**
		 * <code>optional string source_idx = 11;</code>
		 *
		 * <pre>
		 * 事件源编号
		 * </pre>
		 */
		com.google.protobuf.ByteString getSourceIdxBytes();

		/**
		 * <code>optional int32 source_type = 12;</code>
		 *
		 * <pre>
		 * 事件源类型
		 * </pre>
		 */
		boolean hasSourceType();

		/**
		 * <code>optional int32 source_type = 12;</code>
		 *
		 * <pre>
		 * 事件源类型
		 * </pre>
		 */
		int getSourceType();

		/**
		 * <code>optional string source_name = 13;</code>
		 *
		 * <pre>
		 * 事件源名称
		 * </pre>
		 */
		boolean hasSourceName();

		/**
		 * <code>optional string source_name = 13;</code>
		 *
		 * <pre>
		 * 事件源名称
		 * </pre>
		 */
		java.lang.String getSourceName();

		/**
		 * <code>optional string source_name = 13;</code>
		 *
		 * <pre>
		 * 事件源名称
		 * </pre>
		 */
		com.google.protobuf.ByteString getSourceNameBytes();

		/**
		 * <code>optional string log_txt = 14;</code>
		 *
		 * <pre>
		 * 事件描述信息
		 * </pre>
		 */
		boolean hasLogTxt();

		/**
		 * <code>optional string log_txt = 14;</code>
		 *
		 * <pre>
		 * 事件描述信息
		 * </pre>
		 */
		java.lang.String getLogTxt();

		/**
		 * <code>optional string log_txt = 14;</code>
		 *
		 * <pre>
		 * 事件描述信息
		 * </pre>
		 */
		com.google.protobuf.ByteString getLogTxtBytes();

		/**
		 * <code>optional string region_idx = 15;</code>
		 *
		 * <pre>
		 * 事件源区域编号，可选
		 * </pre>
		 */
		boolean hasRegionIdx();

		/**
		 * <code>optional string region_idx = 15;</code>
		 *
		 * <pre>
		 * 事件源区域编号，可选
		 * </pre>
		 */
		java.lang.String getRegionIdx();

		/**
		 * <code>optional string region_idx = 15;</code>
		 *
		 * <pre>
		 * 事件源区域编号，可选
		 * </pre>
		 */
		com.google.protobuf.ByteString getRegionIdxBytes();

		/**
		 * <code>optional bytes ext_info = 20;</code>
		 *
		 * <pre>
		 * 事件扩展信息,各个子系统根据子系统的消息结构体定义解析
		 * </pre>
		 */
		boolean hasExtInfo();

		/**
		 * <code>optional bytes ext_info = 20;</code>
		 *
		 * <pre>
		 * 事件扩展信息,各个子系统根据子系统的消息结构体定义解析
		 * </pre>
		 */
		com.google.protobuf.ByteString getExtInfo();

		/**
		 * <code>repeated int32 user_id = 21;</code>
		 *
		 * <pre>
		 * 事件接收的User Id数组,用于日志查询权限控制
		 * </pre>
		 */
		java.util.List<java.lang.Integer> getUserIdList();

		/**
		 * <code>repeated int32 user_id = 21;</code>
		 *
		 * <pre>
		 * 事件接收的User Id数组,用于日志查询权限控制
		 * </pre>
		 */
		int getUserIdCount();

		/**
		 * <code>repeated int32 user_id = 21;</code>
		 *
		 * <pre>
		 * 事件接收的User Id数组,用于日志查询权限控制
		 * </pre>
		 */
		int getUserId(int index);

		/**
		 * <code>repeated .net.zdsoft.officework.mqreceive.TriggerResult rslt_msg = 33;</code>
		 *
		 * <pre>
		 * 事件处理结果，当event_state为更新时使用
		 * </pre>
		 */
		java.util.List<net.zdsoft.officework.mqreceive.Comm.TriggerResult> getRsltMsgList();

		/**
		 * <code>repeated .net.zdsoft.officework.mqreceive.TriggerResult rslt_msg = 33;</code>
		 *
		 * <pre>
		 * 事件处理结果，当event_state为更新时使用
		 * </pre>
		 */
		net.zdsoft.officework.mqreceive.Comm.TriggerResult getRsltMsg(int index);

		/**
		 * <code>repeated .net.zdsoft.officework.mqreceive.TriggerResult rslt_msg = 33;</code>
		 *
		 * <pre>
		 * 事件处理结果，当event_state为更新时使用
		 * </pre>
		 */
		int getRsltMsgCount();

		/**
		 * <code>repeated .net.zdsoft.officework.mqreceive.TriggerResult rslt_msg = 33;</code>
		 *
		 * <pre>
		 * 事件处理结果，当event_state为更新时使用
		 * </pre>
		 */
		java.util.List<? extends net.zdsoft.officework.mqreceive.Comm.TriggerResultOrBuilder> getRsltMsgOrBuilderList();

		/**
		 * <code>repeated .net.zdsoft.officework.mqreceive.TriggerResult rslt_msg = 33;</code>
		 *
		 * <pre>
		 * 事件处理结果，当event_state为更新时使用
		 * </pre>
		 */
		net.zdsoft.officework.mqreceive.Comm.TriggerResultOrBuilder getRsltMsgOrBuilder(
				int index);

		/**
		 * <code>repeated .net.zdsoft.officework.mqreceive.CommEventTrig trig_info = 34;</code>
		 *
		 * <pre>
		 * 联动信息，目前包含客户端联动、预案
		 * </pre>
		 */
		java.util.List<net.zdsoft.officework.mqreceive.Comm.CommEventTrig> getTrigInfoList();

		/**
		 * <code>repeated .net.zdsoft.officework.mqreceive.CommEventTrig trig_info = 34;</code>
		 *
		 * <pre>
		 * 联动信息，目前包含客户端联动、预案
		 * </pre>
		 */
		net.zdsoft.officework.mqreceive.Comm.CommEventTrig getTrigInfo(int index);

		/**
		 * <code>repeated .net.zdsoft.officework.mqreceive.CommEventTrig trig_info = 34;</code>
		 *
		 * <pre>
		 * 联动信息，目前包含客户端联动、预案
		 * </pre>
		 */
		int getTrigInfoCount();

		/**
		 * <code>repeated .net.zdsoft.officework.mqreceive.CommEventTrig trig_info = 34;</code>
		 *
		 * <pre>
		 * 联动信息，目前包含客户端联动、预案
		 * </pre>
		 */
		java.util.List<? extends net.zdsoft.officework.mqreceive.Comm.CommEventTrigOrBuilder> getTrigInfoOrBuilderList();

		/**
		 * <code>repeated .net.zdsoft.officework.mqreceive.CommEventTrig trig_info = 34;</code>
		 *
		 * <pre>
		 * 联动信息，目前包含客户端联动、预案
		 * </pre>
		 */
		net.zdsoft.officework.mqreceive.Comm.CommEventTrigOrBuilder getTrigInfoOrBuilder(
				int index);
	}

	/**
	 * Protobuf type {@code net.zdsoft.officework.mqreceive.CommEventLog}
	 *
	 * <pre>
	 * &#64;基本事件日志消息结构体
	 * </pre>
	 */
	public static final class CommEventLog extends
			com.google.protobuf.GeneratedMessage implements
	// @@protoc_insertion_point(message_implements:net.zdsoft.officework.mqreceive.CommEventLog)
			CommEventLogOrBuilder {
		// Use CommEventLog.newBuilder() to construct.
		private CommEventLog(
				com.google.protobuf.GeneratedMessage.Builder<?> builder) {
			super(builder);
			this.unknownFields = builder.getUnknownFields();
		}

		private CommEventLog(boolean noInit) {
			this.unknownFields = com.google.protobuf.UnknownFieldSet
					.getDefaultInstance();
		}

		private static final CommEventLog defaultInstance;

		public static CommEventLog getDefaultInstance() {
			return defaultInstance;
		}

		public CommEventLog getDefaultInstanceForType() {
			return defaultInstance;
		}

		private final com.google.protobuf.UnknownFieldSet unknownFields;

		@java.lang.Override
		public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
			return this.unknownFields;
		}

		private CommEventLog(com.google.protobuf.CodedInputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			initFields();
			int mutable_bitField0_ = 0;
			com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet
					.newBuilder();
			try {
				boolean done = false;
				while (!done) {
					int tag = input.readTag();
					switch (tag) {
					case 0:
						done = true;
						break;
					default: {
						if (!parseUnknownField(input, unknownFields,
								extensionRegistry, tag)) {
							done = true;
						}
						break;
					}
					case 10: {
						com.google.protobuf.ByteString bs = input.readBytes();
						bitField0_ |= 0x00000001;
						logId_ = bs;
						break;
					}
					case 16: {
						bitField0_ |= 0x00000002;
						eventState_ = input.readInt32();
						break;
					}
					case 24: {
						bitField0_ |= 0x00000004;
						eventLevel_ = input.readInt32();
						break;
					}
					case 34: {
						com.google.protobuf.ByteString bs = input.readBytes();
						bitField0_ |= 0x00000008;
						unitIdx_ = bs;
						break;
					}
					case 40: {
						bitField0_ |= 0x00000010;
						eventType_ = input.readInt32();
						break;
					}
					case 50: {
						com.google.protobuf.ByteString bs = input.readBytes();
						bitField0_ |= 0x00000020;
						eventTypeName_ = bs;
						break;
					}
					case 56: {
						bitField0_ |= 0x00000040;
						subSysType_ = input.readInt32();
						break;
					}
					case 66: {
						com.google.protobuf.ByteString bs = input.readBytes();
						bitField0_ |= 0x00000080;
						eventName_ = bs;
						break;
					}
					case 74: {
						com.google.protobuf.ByteString bs = input.readBytes();
						bitField0_ |= 0x00000100;
						startTime_ = bs;
						break;
					}
					case 82: {
						com.google.protobuf.ByteString bs = input.readBytes();
						bitField0_ |= 0x00000200;
						stopTime_ = bs;
						break;
					}
					case 90: {
						com.google.protobuf.ByteString bs = input.readBytes();
						bitField0_ |= 0x00000400;
						sourceIdx_ = bs;
						break;
					}
					case 96: {
						bitField0_ |= 0x00000800;
						sourceType_ = input.readInt32();
						break;
					}
					case 106: {
						com.google.protobuf.ByteString bs = input.readBytes();
						bitField0_ |= 0x00001000;
						sourceName_ = bs;
						break;
					}
					case 114: {
						com.google.protobuf.ByteString bs = input.readBytes();
						bitField0_ |= 0x00002000;
						logTxt_ = bs;
						break;
					}
					case 122: {
						com.google.protobuf.ByteString bs = input.readBytes();
						bitField0_ |= 0x00004000;
						regionIdx_ = bs;
						break;
					}
					case 162: {
						bitField0_ |= 0x00008000;
						extInfo_ = input.readBytes();
						break;
					}
					case 168: {
						if (!((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
							userId_ = new java.util.ArrayList<java.lang.Integer>();
							mutable_bitField0_ |= 0x00010000;
						}
						userId_.add(input.readInt32());
						break;
					}
					case 170: {
						int length = input.readRawVarint32();
						int limit = input.pushLimit(length);
						if (!((mutable_bitField0_ & 0x00010000) == 0x00010000)
								&& input.getBytesUntilLimit() > 0) {
							userId_ = new java.util.ArrayList<java.lang.Integer>();
							mutable_bitField0_ |= 0x00010000;
						}
						while (input.getBytesUntilLimit() > 0) {
							userId_.add(input.readInt32());
						}
						input.popLimit(limit);
						break;
					}
					case 266: {
						if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
							rsltMsg_ = new java.util.ArrayList<net.zdsoft.officework.mqreceive.Comm.TriggerResult>();
							mutable_bitField0_ |= 0x00020000;
						}
						rsltMsg_.add(input
								.readMessage(
										net.zdsoft.officework.mqreceive.Comm.TriggerResult.PARSER,
										extensionRegistry));
						break;
					}
					case 274: {
						if (!((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
							trigInfo_ = new java.util.ArrayList<net.zdsoft.officework.mqreceive.Comm.CommEventTrig>();
							mutable_bitField0_ |= 0x00040000;
						}
						trigInfo_
								.add(input
										.readMessage(
												net.zdsoft.officework.mqreceive.Comm.CommEventTrig.PARSER,
												extensionRegistry));
						break;
					}
					}
				}
			} catch (com.google.protobuf.InvalidProtocolBufferException e) {
				throw e.setUnfinishedMessage(this);
			} catch (java.io.IOException e) {
				throw new com.google.protobuf.InvalidProtocolBufferException(
						e.getMessage()).setUnfinishedMessage(this);
			} finally {
				if (((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
					userId_ = java.util.Collections.unmodifiableList(userId_);
				}
				if (((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
					rsltMsg_ = java.util.Collections.unmodifiableList(rsltMsg_);
				}
				if (((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
					trigInfo_ = java.util.Collections
							.unmodifiableList(trigInfo_);
				}
				this.unknownFields = unknownFields.build();
				makeExtensionsImmutable();
			}
		}

		public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
			return net.zdsoft.officework.mqreceive.EventDis.internal_static_net_zdsoft_officework_mqreceive_CommEventLog_descriptor;
		}

		protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
			return net.zdsoft.officework.mqreceive.EventDis.internal_static_net_zdsoft_officework_mqreceive_CommEventLog_fieldAccessorTable
					.ensureFieldAccessorsInitialized(
							net.zdsoft.officework.mqreceive.EventDis.CommEventLog.class,
							net.zdsoft.officework.mqreceive.EventDis.CommEventLog.Builder.class);
		}

		public static com.google.protobuf.Parser<CommEventLog> PARSER = new com.google.protobuf.AbstractParser<CommEventLog>() {
			public CommEventLog parsePartialFrom(
					com.google.protobuf.CodedInputStream input,
					com.google.protobuf.ExtensionRegistryLite extensionRegistry)
					throws com.google.protobuf.InvalidProtocolBufferException {
				return new CommEventLog(input, extensionRegistry);
			}
		};

		@java.lang.Override
		public com.google.protobuf.Parser<CommEventLog> getParserForType() {
			return PARSER;
		}

		private int bitField0_;
		public static final int LOG_ID_FIELD_NUMBER = 1;
		private java.lang.Object logId_;

		/**
		 * <code>required string log_id = 1;</code>
		 *
		 * <pre>
		 * 日志Id，唯一标识一次发生的事件
		 * </pre>
		 */
		public boolean hasLogId() {
			return ((bitField0_ & 0x00000001) == 0x00000001);
		}

		/**
		 * <code>required string log_id = 1;</code>
		 *
		 * <pre>
		 * 日志Id，唯一标识一次发生的事件
		 * </pre>
		 */
		public java.lang.String getLogId() {
			java.lang.Object ref = logId_;
			if (ref instanceof java.lang.String) {
				return (java.lang.String) ref;
			} else {
				com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
				java.lang.String s = bs.toStringUtf8();
				if (bs.isValidUtf8()) {
					logId_ = s;
				}
				return s;
			}
		}

		/**
		 * <code>required string log_id = 1;</code>
		 *
		 * <pre>
		 * 日志Id，唯一标识一次发生的事件
		 * </pre>
		 */
		public com.google.protobuf.ByteString getLogIdBytes() {
			java.lang.Object ref = logId_;
			if (ref instanceof java.lang.String) {
				com.google.protobuf.ByteString b = com.google.protobuf.ByteString
						.copyFromUtf8((java.lang.String) ref);
				logId_ = b;
				return b;
			} else {
				return (com.google.protobuf.ByteString) ref;
			}
		}

		public static final int EVENT_STATE_FIELD_NUMBER = 2;
		private int eventState_;

		/**
		 * <code>required int32 event_state = 2;</code>
		 *
		 * <pre>
		 * 事件状态，事件状态为开始或者瞬时时保存事件，状态为结束时更新日志结束时间，状态为更新时保存联动结果
		 * </pre>
		 */
		public boolean hasEventState() {
			return ((bitField0_ & 0x00000002) == 0x00000002);
		}

		/**
		 * <code>required int32 event_state = 2;</code>
		 *
		 * <pre>
		 * 事件状态，事件状态为开始或者瞬时时保存事件，状态为结束时更新日志结束时间，状态为更新时保存联动结果
		 * </pre>
		 */
		public int getEventState() {
			return eventState_;
		}

		public static final int EVENT_LEVEL_FIELD_NUMBER = 3;
		private int eventLevel_;

		/**
		 * <code>optional int32 event_level = 3;</code>
		 *
		 * <pre>
		 * 事件等级
		 * </pre>
		 */
		public boolean hasEventLevel() {
			return ((bitField0_ & 0x00000004) == 0x00000004);
		}

		/**
		 * <code>optional int32 event_level = 3;</code>
		 *
		 * <pre>
		 * 事件等级
		 * </pre>
		 */
		public int getEventLevel() {
			return eventLevel_;
		}

		public static final int UNIT_IDX_FIELD_NUMBER = 4;
		private java.lang.Object unitIdx_;

		/**
		 * <code>optional string unit_idx = 4;</code>
		 *
		 * <pre>
		 * 控制中心编号
		 * </pre>
		 */
		public boolean hasUnitIdx() {
			return ((bitField0_ & 0x00000008) == 0x00000008);
		}

		/**
		 * <code>optional string unit_idx = 4;</code>
		 *
		 * <pre>
		 * 控制中心编号
		 * </pre>
		 */
		public java.lang.String getUnitIdx() {
			java.lang.Object ref = unitIdx_;
			if (ref instanceof java.lang.String) {
				return (java.lang.String) ref;
			} else {
				com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
				java.lang.String s = bs.toStringUtf8();
				if (bs.isValidUtf8()) {
					unitIdx_ = s;
				}
				return s;
			}
		}

		/**
		 * <code>optional string unit_idx = 4;</code>
		 *
		 * <pre>
		 * 控制中心编号
		 * </pre>
		 */
		public com.google.protobuf.ByteString getUnitIdxBytes() {
			java.lang.Object ref = unitIdx_;
			if (ref instanceof java.lang.String) {
				com.google.protobuf.ByteString b = com.google.protobuf.ByteString
						.copyFromUtf8((java.lang.String) ref);
				unitIdx_ = b;
				return b;
			} else {
				return (com.google.protobuf.ByteString) ref;
			}
		}

		public static final int EVENT_TYPE_FIELD_NUMBER = 5;
		private int eventType_;

		/**
		 * <code>optional int32 event_type = 5;</code>
		 *
		 * <pre>
		 * 事件类型
		 * </pre>
		 */
		public boolean hasEventType() {
			return ((bitField0_ & 0x00000010) == 0x00000010);
		}

		/**
		 * <code>optional int32 event_type = 5;</code>
		 *
		 * <pre>
		 * 事件类型
		 * </pre>
		 */
		public int getEventType() {
			return eventType_;
		}

		public static final int EVENT_TYPE_NAME_FIELD_NUMBER = 6;
		private java.lang.Object eventTypeName_;

		/**
		 * <code>optional string event_type_name = 6;</code>
		 *
		 * <pre>
		 * 事件类型名称
		 * </pre>
		 */
		public boolean hasEventTypeName() {
			return ((bitField0_ & 0x00000020) == 0x00000020);
		}

		/**
		 * <code>optional string event_type_name = 6;</code>
		 *
		 * <pre>
		 * 事件类型名称
		 * </pre>
		 */
		public java.lang.String getEventTypeName() {
			java.lang.Object ref = eventTypeName_;
			if (ref instanceof java.lang.String) {
				return (java.lang.String) ref;
			} else {
				com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
				java.lang.String s = bs.toStringUtf8();
				if (bs.isValidUtf8()) {
					eventTypeName_ = s;
				}
				return s;
			}
		}

		/**
		 * <code>optional string event_type_name = 6;</code>
		 *
		 * <pre>
		 * 事件类型名称
		 * </pre>
		 */
		public com.google.protobuf.ByteString getEventTypeNameBytes() {
			java.lang.Object ref = eventTypeName_;
			if (ref instanceof java.lang.String) {
				com.google.protobuf.ByteString b = com.google.protobuf.ByteString
						.copyFromUtf8((java.lang.String) ref);
				eventTypeName_ = b;
				return b;
			} else {
				return (com.google.protobuf.ByteString) ref;
			}
		}

		public static final int SUB_SYS_TYPE_FIELD_NUMBER = 7;
		private int subSysType_;

		/**
		 * <code>optional int32 sub_sys_type = 7;</code>
		 *
		 * <pre>
		 * 事件所属子系统类型，废弃，事件整改，没有子系统属性了2015-10-28 13:45:13
		 * </pre>
		 */
		public boolean hasSubSysType() {
			return ((bitField0_ & 0x00000040) == 0x00000040);
		}

		/**
		 * <code>optional int32 sub_sys_type = 7;</code>
		 *
		 * <pre>
		 * 事件所属子系统类型，废弃，事件整改，没有子系统属性了2015-10-28 13:45:13
		 * </pre>
		 */
		public int getSubSysType() {
			return subSysType_;
		}

		public static final int EVENT_NAME_FIELD_NUMBER = 8;
		private java.lang.Object eventName_;

		/**
		 * <code>optional string event_name = 8;</code>
		 *
		 * <pre>
		 * 事件名称
		 * </pre>
		 */
		public boolean hasEventName() {
			return ((bitField0_ & 0x00000080) == 0x00000080);
		}

		/**
		 * <code>optional string event_name = 8;</code>
		 *
		 * <pre>
		 * 事件名称
		 * </pre>
		 */
		public java.lang.String getEventName() {
			java.lang.Object ref = eventName_;
			if (ref instanceof java.lang.String) {
				return (java.lang.String) ref;
			} else {
				com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
				java.lang.String s = bs.toStringUtf8();
				if (bs.isValidUtf8()) {
					eventName_ = s;
				}
				return s;
			}
		}

		/**
		 * <code>optional string event_name = 8;</code>
		 *
		 * <pre>
		 * 事件名称
		 * </pre>
		 */
		public com.google.protobuf.ByteString getEventNameBytes() {
			java.lang.Object ref = eventName_;
			if (ref instanceof java.lang.String) {
				com.google.protobuf.ByteString b = com.google.protobuf.ByteString
						.copyFromUtf8((java.lang.String) ref);
				eventName_ = b;
				return b;
			} else {
				return (com.google.protobuf.ByteString) ref;
			}
		}

		public static final int START_TIME_FIELD_NUMBER = 9;
		private java.lang.Object startTime_;

		/**
		 * <code>optional string start_time = 9;</code>
		 *
		 * <pre>
		 * 开始时间
		 * </pre>
		 */
		public boolean hasStartTime() {
			return ((bitField0_ & 0x00000100) == 0x00000100);
		}

		/**
		 * <code>optional string start_time = 9;</code>
		 *
		 * <pre>
		 * 开始时间
		 * </pre>
		 */
		public java.lang.String getStartTime() {
			java.lang.Object ref = startTime_;
			if (ref instanceof java.lang.String) {
				return (java.lang.String) ref;
			} else {
				com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
				java.lang.String s = bs.toStringUtf8();
				if (bs.isValidUtf8()) {
					startTime_ = s;
				}
				return s;
			}
		}

		/**
		 * <code>optional string start_time = 9;</code>
		 *
		 * <pre>
		 * 开始时间
		 * </pre>
		 */
		public com.google.protobuf.ByteString getStartTimeBytes() {
			java.lang.Object ref = startTime_;
			if (ref instanceof java.lang.String) {
				com.google.protobuf.ByteString b = com.google.protobuf.ByteString
						.copyFromUtf8((java.lang.String) ref);
				startTime_ = b;
				return b;
			} else {
				return (com.google.protobuf.ByteString) ref;
			}
		}

		public static final int STOP_TIME_FIELD_NUMBER = 10;
		private java.lang.Object stopTime_;

		/**
		 * <code>optional string stop_time = 10;</code>
		 *
		 * <pre>
		 * 结束时间
		 * </pre>
		 */
		public boolean hasStopTime() {
			return ((bitField0_ & 0x00000200) == 0x00000200);
		}

		/**
		 * <code>optional string stop_time = 10;</code>
		 *
		 * <pre>
		 * 结束时间
		 * </pre>
		 */
		public java.lang.String getStopTime() {
			java.lang.Object ref = stopTime_;
			if (ref instanceof java.lang.String) {
				return (java.lang.String) ref;
			} else {
				com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
				java.lang.String s = bs.toStringUtf8();
				if (bs.isValidUtf8()) {
					stopTime_ = s;
				}
				return s;
			}
		}

		/**
		 * <code>optional string stop_time = 10;</code>
		 *
		 * <pre>
		 * 结束时间
		 * </pre>
		 */
		public com.google.protobuf.ByteString getStopTimeBytes() {
			java.lang.Object ref = stopTime_;
			if (ref instanceof java.lang.String) {
				com.google.protobuf.ByteString b = com.google.protobuf.ByteString
						.copyFromUtf8((java.lang.String) ref);
				stopTime_ = b;
				return b;
			} else {
				return (com.google.protobuf.ByteString) ref;
			}
		}

		public static final int SOURCE_IDX_FIELD_NUMBER = 11;
		private java.lang.Object sourceIdx_;

		/**
		 * <code>optional string source_idx = 11;</code>
		 *
		 * <pre>
		 * 事件源编号
		 * </pre>
		 */
		public boolean hasSourceIdx() {
			return ((bitField0_ & 0x00000400) == 0x00000400);
		}

		/**
		 * <code>optional string source_idx = 11;</code>
		 *
		 * <pre>
		 * 事件源编号
		 * </pre>
		 */
		public java.lang.String getSourceIdx() {
			java.lang.Object ref = sourceIdx_;
			if (ref instanceof java.lang.String) {
				return (java.lang.String) ref;
			} else {
				com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
				java.lang.String s = bs.toStringUtf8();
				if (bs.isValidUtf8()) {
					sourceIdx_ = s;
				}
				return s;
			}
		}

		/**
		 * <code>optional string source_idx = 11;</code>
		 *
		 * <pre>
		 * 事件源编号
		 * </pre>
		 */
		public com.google.protobuf.ByteString getSourceIdxBytes() {
			java.lang.Object ref = sourceIdx_;
			if (ref instanceof java.lang.String) {
				com.google.protobuf.ByteString b = com.google.protobuf.ByteString
						.copyFromUtf8((java.lang.String) ref);
				sourceIdx_ = b;
				return b;
			} else {
				return (com.google.protobuf.ByteString) ref;
			}
		}

		public static final int SOURCE_TYPE_FIELD_NUMBER = 12;
		private int sourceType_;

		/**
		 * <code>optional int32 source_type = 12;</code>
		 *
		 * <pre>
		 * 事件源类型
		 * </pre>
		 */
		public boolean hasSourceType() {
			return ((bitField0_ & 0x00000800) == 0x00000800);
		}

		/**
		 * <code>optional int32 source_type = 12;</code>
		 *
		 * <pre>
		 * 事件源类型
		 * </pre>
		 */
		public int getSourceType() {
			return sourceType_;
		}

		public static final int SOURCE_NAME_FIELD_NUMBER = 13;
		private java.lang.Object sourceName_;

		/**
		 * <code>optional string source_name = 13;</code>
		 *
		 * <pre>
		 * 事件源名称
		 * </pre>
		 */
		public boolean hasSourceName() {
			return ((bitField0_ & 0x00001000) == 0x00001000);
		}

		/**
		 * <code>optional string source_name = 13;</code>
		 *
		 * <pre>
		 * 事件源名称
		 * </pre>
		 */
		public java.lang.String getSourceName() {
			java.lang.Object ref = sourceName_;
			if (ref instanceof java.lang.String) {
				return (java.lang.String) ref;
			} else {
				com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
				java.lang.String s = bs.toStringUtf8();
				if (bs.isValidUtf8()) {
					sourceName_ = s;
				}
				return s;
			}
		}

		/**
		 * <code>optional string source_name = 13;</code>
		 *
		 * <pre>
		 * 事件源名称
		 * </pre>
		 */
		public com.google.protobuf.ByteString getSourceNameBytes() {
			java.lang.Object ref = sourceName_;
			if (ref instanceof java.lang.String) {
				com.google.protobuf.ByteString b = com.google.protobuf.ByteString
						.copyFromUtf8((java.lang.String) ref);
				sourceName_ = b;
				return b;
			} else {
				return (com.google.protobuf.ByteString) ref;
			}
		}

		public static final int LOG_TXT_FIELD_NUMBER = 14;
		private java.lang.Object logTxt_;

		/**
		 * <code>optional string log_txt = 14;</code>
		 *
		 * <pre>
		 * 事件描述信息
		 * </pre>
		 */
		public boolean hasLogTxt() {
			return ((bitField0_ & 0x00002000) == 0x00002000);
		}

		/**
		 * <code>optional string log_txt = 14;</code>
		 *
		 * <pre>
		 * 事件描述信息
		 * </pre>
		 */
		public java.lang.String getLogTxt() {
			java.lang.Object ref = logTxt_;
			if (ref instanceof java.lang.String) {
				return (java.lang.String) ref;
			} else {
				com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
				java.lang.String s = bs.toStringUtf8();
				if (bs.isValidUtf8()) {
					logTxt_ = s;
				}
				return s;
			}
		}

		/**
		 * <code>optional string log_txt = 14;</code>
		 *
		 * <pre>
		 * 事件描述信息
		 * </pre>
		 */
		public com.google.protobuf.ByteString getLogTxtBytes() {
			java.lang.Object ref = logTxt_;
			if (ref instanceof java.lang.String) {
				com.google.protobuf.ByteString b = com.google.protobuf.ByteString
						.copyFromUtf8((java.lang.String) ref);
				logTxt_ = b;
				return b;
			} else {
				return (com.google.protobuf.ByteString) ref;
			}
		}

		public static final int REGION_IDX_FIELD_NUMBER = 15;
		private java.lang.Object regionIdx_;

		/**
		 * <code>optional string region_idx = 15;</code>
		 *
		 * <pre>
		 * 事件源区域编号，可选
		 * </pre>
		 */
		public boolean hasRegionIdx() {
			return ((bitField0_ & 0x00004000) == 0x00004000);
		}

		/**
		 * <code>optional string region_idx = 15;</code>
		 *
		 * <pre>
		 * 事件源区域编号，可选
		 * </pre>
		 */
		public java.lang.String getRegionIdx() {
			java.lang.Object ref = regionIdx_;
			if (ref instanceof java.lang.String) {
				return (java.lang.String) ref;
			} else {
				com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
				java.lang.String s = bs.toStringUtf8();
				if (bs.isValidUtf8()) {
					regionIdx_ = s;
				}
				return s;
			}
		}

		/**
		 * <code>optional string region_idx = 15;</code>
		 *
		 * <pre>
		 * 事件源区域编号，可选
		 * </pre>
		 */
		public com.google.protobuf.ByteString getRegionIdxBytes() {
			java.lang.Object ref = regionIdx_;
			if (ref instanceof java.lang.String) {
				com.google.protobuf.ByteString b = com.google.protobuf.ByteString
						.copyFromUtf8((java.lang.String) ref);
				regionIdx_ = b;
				return b;
			} else {
				return (com.google.protobuf.ByteString) ref;
			}
		}

		public static final int EXT_INFO_FIELD_NUMBER = 20;
		private com.google.protobuf.ByteString extInfo_;

		/**
		 * <code>optional bytes ext_info = 20;</code>
		 *
		 * <pre>
		 * 事件扩展信息,各个子系统根据子系统的消息结构体定义解析
		 * </pre>
		 */
		public boolean hasExtInfo() {
			return ((bitField0_ & 0x00008000) == 0x00008000);
		}

		/**
		 * <code>optional bytes ext_info = 20;</code>
		 *
		 * <pre>
		 * 事件扩展信息,各个子系统根据子系统的消息结构体定义解析
		 * </pre>
		 */
		public com.google.protobuf.ByteString getExtInfo() {
			return extInfo_;
		}

		public static final int USER_ID_FIELD_NUMBER = 21;
		private java.util.List<java.lang.Integer> userId_;

		/**
		 * <code>repeated int32 user_id = 21;</code>
		 *
		 * <pre>
		 * 事件接收的User Id数组,用于日志查询权限控制
		 * </pre>
		 */
		public java.util.List<java.lang.Integer> getUserIdList() {
			return userId_;
		}

		/**
		 * <code>repeated int32 user_id = 21;</code>
		 *
		 * <pre>
		 * 事件接收的User Id数组,用于日志查询权限控制
		 * </pre>
		 */
		public int getUserIdCount() {
			return userId_.size();
		}

		/**
		 * <code>repeated int32 user_id = 21;</code>
		 *
		 * <pre>
		 * 事件接收的User Id数组,用于日志查询权限控制
		 * </pre>
		 */
		public int getUserId(int index) {
			return userId_.get(index);
		}

		public static final int RSLT_MSG_FIELD_NUMBER = 33;
		private java.util.List<net.zdsoft.officework.mqreceive.Comm.TriggerResult> rsltMsg_;

		/**
		 * <code>repeated .net.zdsoft.officework.mqreceive.TriggerResult rslt_msg = 33;</code>
		 *
		 * <pre>
		 * 事件处理结果，当event_state为更新时使用
		 * </pre>
		 */
		public java.util.List<net.zdsoft.officework.mqreceive.Comm.TriggerResult> getRsltMsgList() {
			return rsltMsg_;
		}

		/**
		 * <code>repeated .net.zdsoft.officework.mqreceive.TriggerResult rslt_msg = 33;</code>
		 *
		 * <pre>
		 * 事件处理结果，当event_state为更新时使用
		 * </pre>
		 */
		public java.util.List<? extends net.zdsoft.officework.mqreceive.Comm.TriggerResultOrBuilder> getRsltMsgOrBuilderList() {
			return rsltMsg_;
		}

		/**
		 * <code>repeated .net.zdsoft.officework.mqreceive.TriggerResult rslt_msg = 33;</code>
		 *
		 * <pre>
		 * 事件处理结果，当event_state为更新时使用
		 * </pre>
		 */
		public int getRsltMsgCount() {
			return rsltMsg_.size();
		}

		/**
		 * <code>repeated .net.zdsoft.officework.mqreceive.TriggerResult rslt_msg = 33;</code>
		 *
		 * <pre>
		 * 事件处理结果，当event_state为更新时使用
		 * </pre>
		 */
		public net.zdsoft.officework.mqreceive.Comm.TriggerResult getRsltMsg(
				int index) {
			return rsltMsg_.get(index);
		}

		/**
		 * <code>repeated .net.zdsoft.officework.mqreceive.TriggerResult rslt_msg = 33;</code>
		 *
		 * <pre>
		 * 事件处理结果，当event_state为更新时使用
		 * </pre>
		 */
		public net.zdsoft.officework.mqreceive.Comm.TriggerResultOrBuilder getRsltMsgOrBuilder(
				int index) {
			return rsltMsg_.get(index);
		}

		public static final int TRIG_INFO_FIELD_NUMBER = 34;
		private java.util.List<net.zdsoft.officework.mqreceive.Comm.CommEventTrig> trigInfo_;

		/**
		 * <code>repeated .net.zdsoft.officework.mqreceive.CommEventTrig trig_info = 34;</code>
		 *
		 * <pre>
		 * 联动信息，目前包含客户端联动、预案
		 * </pre>
		 */
		public java.util.List<net.zdsoft.officework.mqreceive.Comm.CommEventTrig> getTrigInfoList() {
			return trigInfo_;
		}

		/**
		 * <code>repeated .net.zdsoft.officework.mqreceive.CommEventTrig trig_info = 34;</code>
		 *
		 * <pre>
		 * 联动信息，目前包含客户端联动、预案
		 * </pre>
		 */
		public java.util.List<? extends net.zdsoft.officework.mqreceive.Comm.CommEventTrigOrBuilder> getTrigInfoOrBuilderList() {
			return trigInfo_;
		}

		/**
		 * <code>repeated .net.zdsoft.officework.mqreceive.CommEventTrig trig_info = 34;</code>
		 *
		 * <pre>
		 * 联动信息，目前包含客户端联动、预案
		 * </pre>
		 */
		public int getTrigInfoCount() {
			return trigInfo_.size();
		}

		/**
		 * <code>repeated .net.zdsoft.officework.mqreceive.CommEventTrig trig_info = 34;</code>
		 *
		 * <pre>
		 * 联动信息，目前包含客户端联动、预案
		 * </pre>
		 */
		public net.zdsoft.officework.mqreceive.Comm.CommEventTrig getTrigInfo(
				int index) {
			return trigInfo_.get(index);
		}

		/**
		 * <code>repeated .net.zdsoft.officework.mqreceive.CommEventTrig trig_info = 34;</code>
		 *
		 * <pre>
		 * 联动信息，目前包含客户端联动、预案
		 * </pre>
		 */
		public net.zdsoft.officework.mqreceive.Comm.CommEventTrigOrBuilder getTrigInfoOrBuilder(
				int index) {
			return trigInfo_.get(index);
		}

		private void initFields() {
			logId_ = "";
			eventState_ = 0;
			eventLevel_ = 0;
			unitIdx_ = "";
			eventType_ = 0;
			eventTypeName_ = "";
			subSysType_ = 0;
			eventName_ = "";
			startTime_ = "";
			stopTime_ = "";
			sourceIdx_ = "";
			sourceType_ = 0;
			sourceName_ = "";
			logTxt_ = "";
			regionIdx_ = "";
			extInfo_ = com.google.protobuf.ByteString.EMPTY;
			userId_ = java.util.Collections.emptyList();
			rsltMsg_ = java.util.Collections.emptyList();
			trigInfo_ = java.util.Collections.emptyList();
		}

		private byte memoizedIsInitialized = -1;

		public final boolean isInitialized() {
			byte isInitialized = memoizedIsInitialized;
			if (isInitialized == 1)
				return true;
			if (isInitialized == 0)
				return false;

			if (!hasLogId()) {
				memoizedIsInitialized = 0;
				return false;
			}
			if (!hasEventState()) {
				memoizedIsInitialized = 0;
				return false;
			}
			for (int i = 0; i < getRsltMsgCount(); i++) {
				if (!getRsltMsg(i).isInitialized()) {
					memoizedIsInitialized = 0;
					return false;
				}
			}
			for (int i = 0; i < getTrigInfoCount(); i++) {
				if (!getTrigInfo(i).isInitialized()) {
					memoizedIsInitialized = 0;
					return false;
				}
			}
			memoizedIsInitialized = 1;
			return true;
		}

		public void writeTo(com.google.protobuf.CodedOutputStream output)
				throws java.io.IOException {
			getSerializedSize();
			if (((bitField0_ & 0x00000001) == 0x00000001)) {
				output.writeBytes(1, getLogIdBytes());
			}
			if (((bitField0_ & 0x00000002) == 0x00000002)) {
				output.writeInt32(2, eventState_);
			}
			if (((bitField0_ & 0x00000004) == 0x00000004)) {
				output.writeInt32(3, eventLevel_);
			}
			if (((bitField0_ & 0x00000008) == 0x00000008)) {
				output.writeBytes(4, getUnitIdxBytes());
			}
			if (((bitField0_ & 0x00000010) == 0x00000010)) {
				output.writeInt32(5, eventType_);
			}
			if (((bitField0_ & 0x00000020) == 0x00000020)) {
				output.writeBytes(6, getEventTypeNameBytes());
			}
			if (((bitField0_ & 0x00000040) == 0x00000040)) {
				output.writeInt32(7, subSysType_);
			}
			if (((bitField0_ & 0x00000080) == 0x00000080)) {
				output.writeBytes(8, getEventNameBytes());
			}
			if (((bitField0_ & 0x00000100) == 0x00000100)) {
				output.writeBytes(9, getStartTimeBytes());
			}
			if (((bitField0_ & 0x00000200) == 0x00000200)) {
				output.writeBytes(10, getStopTimeBytes());
			}
			if (((bitField0_ & 0x00000400) == 0x00000400)) {
				output.writeBytes(11, getSourceIdxBytes());
			}
			if (((bitField0_ & 0x00000800) == 0x00000800)) {
				output.writeInt32(12, sourceType_);
			}
			if (((bitField0_ & 0x00001000) == 0x00001000)) {
				output.writeBytes(13, getSourceNameBytes());
			}
			if (((bitField0_ & 0x00002000) == 0x00002000)) {
				output.writeBytes(14, getLogTxtBytes());
			}
			if (((bitField0_ & 0x00004000) == 0x00004000)) {
				output.writeBytes(15, getRegionIdxBytes());
			}
			if (((bitField0_ & 0x00008000) == 0x00008000)) {
				output.writeBytes(20, extInfo_);
			}
			for (int i = 0; i < userId_.size(); i++) {
				output.writeInt32(21, userId_.get(i));
			}
			for (int i = 0; i < rsltMsg_.size(); i++) {
				output.writeMessage(33, rsltMsg_.get(i));
			}
			for (int i = 0; i < trigInfo_.size(); i++) {
				output.writeMessage(34, trigInfo_.get(i));
			}
			getUnknownFields().writeTo(output);
		}

		private int memoizedSerializedSize = -1;

		public int getSerializedSize() {
			int size = memoizedSerializedSize;
			if (size != -1)
				return size;

			size = 0;
			if (((bitField0_ & 0x00000001) == 0x00000001)) {
				size += com.google.protobuf.CodedOutputStream.computeBytesSize(
						1, getLogIdBytes());
			}
			if (((bitField0_ & 0x00000002) == 0x00000002)) {
				size += com.google.protobuf.CodedOutputStream.computeInt32Size(
						2, eventState_);
			}
			if (((bitField0_ & 0x00000004) == 0x00000004)) {
				size += com.google.protobuf.CodedOutputStream.computeInt32Size(
						3, eventLevel_);
			}
			if (((bitField0_ & 0x00000008) == 0x00000008)) {
				size += com.google.protobuf.CodedOutputStream.computeBytesSize(
						4, getUnitIdxBytes());
			}
			if (((bitField0_ & 0x00000010) == 0x00000010)) {
				size += com.google.protobuf.CodedOutputStream.computeInt32Size(
						5, eventType_);
			}
			if (((bitField0_ & 0x00000020) == 0x00000020)) {
				size += com.google.protobuf.CodedOutputStream.computeBytesSize(
						6, getEventTypeNameBytes());
			}
			if (((bitField0_ & 0x00000040) == 0x00000040)) {
				size += com.google.protobuf.CodedOutputStream.computeInt32Size(
						7, subSysType_);
			}
			if (((bitField0_ & 0x00000080) == 0x00000080)) {
				size += com.google.protobuf.CodedOutputStream.computeBytesSize(
						8, getEventNameBytes());
			}
			if (((bitField0_ & 0x00000100) == 0x00000100)) {
				size += com.google.protobuf.CodedOutputStream.computeBytesSize(
						9, getStartTimeBytes());
			}
			if (((bitField0_ & 0x00000200) == 0x00000200)) {
				size += com.google.protobuf.CodedOutputStream.computeBytesSize(
						10, getStopTimeBytes());
			}
			if (((bitField0_ & 0x00000400) == 0x00000400)) {
				size += com.google.protobuf.CodedOutputStream.computeBytesSize(
						11, getSourceIdxBytes());
			}
			if (((bitField0_ & 0x00000800) == 0x00000800)) {
				size += com.google.protobuf.CodedOutputStream.computeInt32Size(
						12, sourceType_);
			}
			if (((bitField0_ & 0x00001000) == 0x00001000)) {
				size += com.google.protobuf.CodedOutputStream.computeBytesSize(
						13, getSourceNameBytes());
			}
			if (((bitField0_ & 0x00002000) == 0x00002000)) {
				size += com.google.protobuf.CodedOutputStream.computeBytesSize(
						14, getLogTxtBytes());
			}
			if (((bitField0_ & 0x00004000) == 0x00004000)) {
				size += com.google.protobuf.CodedOutputStream.computeBytesSize(
						15, getRegionIdxBytes());
			}
			if (((bitField0_ & 0x00008000) == 0x00008000)) {
				size += com.google.protobuf.CodedOutputStream.computeBytesSize(
						20, extInfo_);
			}
			{
				int dataSize = 0;
				for (int i = 0; i < userId_.size(); i++) {
					dataSize += com.google.protobuf.CodedOutputStream
							.computeInt32SizeNoTag(userId_.get(i));
				}
				size += dataSize;
				size += 2 * getUserIdList().size();
			}
			for (int i = 0; i < rsltMsg_.size(); i++) {
				size += com.google.protobuf.CodedOutputStream
						.computeMessageSize(33, rsltMsg_.get(i));
			}
			for (int i = 0; i < trigInfo_.size(); i++) {
				size += com.google.protobuf.CodedOutputStream
						.computeMessageSize(34, trigInfo_.get(i));
			}
			size += getUnknownFields().getSerializedSize();
			memoizedSerializedSize = size;
			return size;
		}

		private static final long serialVersionUID = 0L;

		@java.lang.Override
		protected java.lang.Object writeReplace()
				throws java.io.ObjectStreamException {
			return super.writeReplace();
		}

		public static net.zdsoft.officework.mqreceive.EventDis.CommEventLog parseFrom(
				com.google.protobuf.ByteString data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}

		public static net.zdsoft.officework.mqreceive.EventDis.CommEventLog parseFrom(
				com.google.protobuf.ByteString data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}

		public static net.zdsoft.officework.mqreceive.EventDis.CommEventLog parseFrom(
				byte[] data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}

		public static net.zdsoft.officework.mqreceive.EventDis.CommEventLog parseFrom(
				byte[] data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}

		public static net.zdsoft.officework.mqreceive.EventDis.CommEventLog parseFrom(
				java.io.InputStream input) throws java.io.IOException {
			return PARSER.parseFrom(input);
		}

		public static net.zdsoft.officework.mqreceive.EventDis.CommEventLog parseFrom(
				java.io.InputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return PARSER.parseFrom(input, extensionRegistry);
		}

		public static net.zdsoft.officework.mqreceive.EventDis.CommEventLog parseDelimitedFrom(
				java.io.InputStream input) throws java.io.IOException {
			return PARSER.parseDelimitedFrom(input);
		}

		public static net.zdsoft.officework.mqreceive.EventDis.CommEventLog parseDelimitedFrom(
				java.io.InputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return PARSER.parseDelimitedFrom(input, extensionRegistry);
		}

		public static net.zdsoft.officework.mqreceive.EventDis.CommEventLog parseFrom(
				com.google.protobuf.CodedInputStream input)
				throws java.io.IOException {
			return PARSER.parseFrom(input);
		}

		public static net.zdsoft.officework.mqreceive.EventDis.CommEventLog parseFrom(
				com.google.protobuf.CodedInputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return PARSER.parseFrom(input, extensionRegistry);
		}

		public static Builder newBuilder() {
			return Builder.create();
		}

		public Builder newBuilderForType() {
			return newBuilder();
		}

		public static Builder newBuilder(
				net.zdsoft.officework.mqreceive.EventDis.CommEventLog prototype) {
			return newBuilder().mergeFrom(prototype);
		}

		public Builder toBuilder() {
			return newBuilder(this);
		}

		@java.lang.Override
		protected Builder newBuilderForType(
				com.google.protobuf.GeneratedMessage.BuilderParent parent) {
			Builder builder = new Builder(parent);
			return builder;
		}

		/**
		 * Protobuf type {@code net.zdsoft.officework.mqreceive.CommEventLog}
		 *
		 * <pre>
		 * &#64;基本事件日志消息结构体
		 * </pre>
		 */
		public static final class Builder extends
				com.google.protobuf.GeneratedMessage.Builder<Builder> implements
		// @@protoc_insertion_point(builder_implements:net.zdsoft.officework.mqreceive.CommEventLog)
				net.zdsoft.officework.mqreceive.EventDis.CommEventLogOrBuilder {
			public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
				return net.zdsoft.officework.mqreceive.EventDis.internal_static_net_zdsoft_officework_mqreceive_CommEventLog_descriptor;
			}

			protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
				return net.zdsoft.officework.mqreceive.EventDis.internal_static_net_zdsoft_officework_mqreceive_CommEventLog_fieldAccessorTable
						.ensureFieldAccessorsInitialized(
								net.zdsoft.officework.mqreceive.EventDis.CommEventLog.class,
								net.zdsoft.officework.mqreceive.EventDis.CommEventLog.Builder.class);
			}

			// Construct using
			// net.zdsoft.officework.mqreceive.EventDis.CommEventLog.newBuilder()
			private Builder() {
				maybeForceBuilderInitialization();
			}

			private Builder(
					com.google.protobuf.GeneratedMessage.BuilderParent parent) {
				super(parent);
				maybeForceBuilderInitialization();
			}

			private void maybeForceBuilderInitialization() {
				if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
					getRsltMsgFieldBuilder();
					getTrigInfoFieldBuilder();
				}
			}

			private static Builder create() {
				return new Builder();
			}

			public Builder clear() {
				super.clear();
				logId_ = "";
				bitField0_ = (bitField0_ & ~0x00000001);
				eventState_ = 0;
				bitField0_ = (bitField0_ & ~0x00000002);
				eventLevel_ = 0;
				bitField0_ = (bitField0_ & ~0x00000004);
				unitIdx_ = "";
				bitField0_ = (bitField0_ & ~0x00000008);
				eventType_ = 0;
				bitField0_ = (bitField0_ & ~0x00000010);
				eventTypeName_ = "";
				bitField0_ = (bitField0_ & ~0x00000020);
				subSysType_ = 0;
				bitField0_ = (bitField0_ & ~0x00000040);
				eventName_ = "";
				bitField0_ = (bitField0_ & ~0x00000080);
				startTime_ = "";
				bitField0_ = (bitField0_ & ~0x00000100);
				stopTime_ = "";
				bitField0_ = (bitField0_ & ~0x00000200);
				sourceIdx_ = "";
				bitField0_ = (bitField0_ & ~0x00000400);
				sourceType_ = 0;
				bitField0_ = (bitField0_ & ~0x00000800);
				sourceName_ = "";
				bitField0_ = (bitField0_ & ~0x00001000);
				logTxt_ = "";
				bitField0_ = (bitField0_ & ~0x00002000);
				regionIdx_ = "";
				bitField0_ = (bitField0_ & ~0x00004000);
				extInfo_ = com.google.protobuf.ByteString.EMPTY;
				bitField0_ = (bitField0_ & ~0x00008000);
				userId_ = java.util.Collections.emptyList();
				bitField0_ = (bitField0_ & ~0x00010000);
				if (rsltMsgBuilder_ == null) {
					rsltMsg_ = java.util.Collections.emptyList();
					bitField0_ = (bitField0_ & ~0x00020000);
				} else {
					rsltMsgBuilder_.clear();
				}
				if (trigInfoBuilder_ == null) {
					trigInfo_ = java.util.Collections.emptyList();
					bitField0_ = (bitField0_ & ~0x00040000);
				} else {
					trigInfoBuilder_.clear();
				}
				return this;
			}

			public Builder clone() {
				return create().mergeFrom(buildPartial());
			}

			public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
				return net.zdsoft.officework.mqreceive.EventDis.internal_static_net_zdsoft_officework_mqreceive_CommEventLog_descriptor;
			}

			public net.zdsoft.officework.mqreceive.EventDis.CommEventLog getDefaultInstanceForType() {
				return net.zdsoft.officework.mqreceive.EventDis.CommEventLog
						.getDefaultInstance();
			}

			public net.zdsoft.officework.mqreceive.EventDis.CommEventLog build() {
				net.zdsoft.officework.mqreceive.EventDis.CommEventLog result = buildPartial();
				if (!result.isInitialized()) {
					throw newUninitializedMessageException(result);
				}
				return result;
			}

			public net.zdsoft.officework.mqreceive.EventDis.CommEventLog buildPartial() {
				net.zdsoft.officework.mqreceive.EventDis.CommEventLog result = new net.zdsoft.officework.mqreceive.EventDis.CommEventLog(
						this);
				int from_bitField0_ = bitField0_;
				int to_bitField0_ = 0;
				if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
					to_bitField0_ |= 0x00000001;
				}
				result.logId_ = logId_;
				if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
					to_bitField0_ |= 0x00000002;
				}
				result.eventState_ = eventState_;
				if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
					to_bitField0_ |= 0x00000004;
				}
				result.eventLevel_ = eventLevel_;
				if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
					to_bitField0_ |= 0x00000008;
				}
				result.unitIdx_ = unitIdx_;
				if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
					to_bitField0_ |= 0x00000010;
				}
				result.eventType_ = eventType_;
				if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
					to_bitField0_ |= 0x00000020;
				}
				result.eventTypeName_ = eventTypeName_;
				if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
					to_bitField0_ |= 0x00000040;
				}
				result.subSysType_ = subSysType_;
				if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
					to_bitField0_ |= 0x00000080;
				}
				result.eventName_ = eventName_;
				if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
					to_bitField0_ |= 0x00000100;
				}
				result.startTime_ = startTime_;
				if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
					to_bitField0_ |= 0x00000200;
				}
				result.stopTime_ = stopTime_;
				if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
					to_bitField0_ |= 0x00000400;
				}
				result.sourceIdx_ = sourceIdx_;
				if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
					to_bitField0_ |= 0x00000800;
				}
				result.sourceType_ = sourceType_;
				if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
					to_bitField0_ |= 0x00001000;
				}
				result.sourceName_ = sourceName_;
				if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
					to_bitField0_ |= 0x00002000;
				}
				result.logTxt_ = logTxt_;
				if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
					to_bitField0_ |= 0x00004000;
				}
				result.regionIdx_ = regionIdx_;
				if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
					to_bitField0_ |= 0x00008000;
				}
				result.extInfo_ = extInfo_;
				if (((bitField0_ & 0x00010000) == 0x00010000)) {
					userId_ = java.util.Collections.unmodifiableList(userId_);
					bitField0_ = (bitField0_ & ~0x00010000);
				}
				result.userId_ = userId_;
				if (rsltMsgBuilder_ == null) {
					if (((bitField0_ & 0x00020000) == 0x00020000)) {
						rsltMsg_ = java.util.Collections
								.unmodifiableList(rsltMsg_);
						bitField0_ = (bitField0_ & ~0x00020000);
					}
					result.rsltMsg_ = rsltMsg_;
				} else {
					result.rsltMsg_ = rsltMsgBuilder_.build();
				}
				if (trigInfoBuilder_ == null) {
					if (((bitField0_ & 0x00040000) == 0x00040000)) {
						trigInfo_ = java.util.Collections
								.unmodifiableList(trigInfo_);
						bitField0_ = (bitField0_ & ~0x00040000);
					}
					result.trigInfo_ = trigInfo_;
				} else {
					result.trigInfo_ = trigInfoBuilder_.build();
				}
				result.bitField0_ = to_bitField0_;
				onBuilt();
				return result;
			}

			public Builder mergeFrom(com.google.protobuf.Message other) {
				if (other instanceof net.zdsoft.officework.mqreceive.EventDis.CommEventLog) {
					return mergeFrom((net.zdsoft.officework.mqreceive.EventDis.CommEventLog) other);
				} else {
					super.mergeFrom(other);
					return this;
				}
			}

			public Builder mergeFrom(
					net.zdsoft.officework.mqreceive.EventDis.CommEventLog other) {
				if (other == net.zdsoft.officework.mqreceive.EventDis.CommEventLog
						.getDefaultInstance())
					return this;
				if (other.hasLogId()) {
					bitField0_ |= 0x00000001;
					logId_ = other.logId_;
					onChanged();
				}
				if (other.hasEventState()) {
					setEventState(other.getEventState());
				}
				if (other.hasEventLevel()) {
					setEventLevel(other.getEventLevel());
				}
				if (other.hasUnitIdx()) {
					bitField0_ |= 0x00000008;
					unitIdx_ = other.unitIdx_;
					onChanged();
				}
				if (other.hasEventType()) {
					setEventType(other.getEventType());
				}
				if (other.hasEventTypeName()) {
					bitField0_ |= 0x00000020;
					eventTypeName_ = other.eventTypeName_;
					onChanged();
				}
				if (other.hasSubSysType()) {
					setSubSysType(other.getSubSysType());
				}
				if (other.hasEventName()) {
					bitField0_ |= 0x00000080;
					eventName_ = other.eventName_;
					onChanged();
				}
				if (other.hasStartTime()) {
					bitField0_ |= 0x00000100;
					startTime_ = other.startTime_;
					onChanged();
				}
				if (other.hasStopTime()) {
					bitField0_ |= 0x00000200;
					stopTime_ = other.stopTime_;
					onChanged();
				}
				if (other.hasSourceIdx()) {
					bitField0_ |= 0x00000400;
					sourceIdx_ = other.sourceIdx_;
					onChanged();
				}
				if (other.hasSourceType()) {
					setSourceType(other.getSourceType());
				}
				if (other.hasSourceName()) {
					bitField0_ |= 0x00001000;
					sourceName_ = other.sourceName_;
					onChanged();
				}
				if (other.hasLogTxt()) {
					bitField0_ |= 0x00002000;
					logTxt_ = other.logTxt_;
					onChanged();
				}
				if (other.hasRegionIdx()) {
					bitField0_ |= 0x00004000;
					regionIdx_ = other.regionIdx_;
					onChanged();
				}
				if (other.hasExtInfo()) {
					setExtInfo(other.getExtInfo());
				}
				if (!other.userId_.isEmpty()) {
					if (userId_.isEmpty()) {
						userId_ = other.userId_;
						bitField0_ = (bitField0_ & ~0x00010000);
					} else {
						ensureUserIdIsMutable();
						userId_.addAll(other.userId_);
					}
					onChanged();
				}
				if (rsltMsgBuilder_ == null) {
					if (!other.rsltMsg_.isEmpty()) {
						if (rsltMsg_.isEmpty()) {
							rsltMsg_ = other.rsltMsg_;
							bitField0_ = (bitField0_ & ~0x00020000);
						} else {
							ensureRsltMsgIsMutable();
							rsltMsg_.addAll(other.rsltMsg_);
						}
						onChanged();
					}
				} else {
					if (!other.rsltMsg_.isEmpty()) {
						if (rsltMsgBuilder_.isEmpty()) {
							rsltMsgBuilder_.dispose();
							rsltMsgBuilder_ = null;
							rsltMsg_ = other.rsltMsg_;
							bitField0_ = (bitField0_ & ~0x00020000);
							rsltMsgBuilder_ = com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ? getRsltMsgFieldBuilder()
									: null;
						} else {
							rsltMsgBuilder_.addAllMessages(other.rsltMsg_);
						}
					}
				}
				if (trigInfoBuilder_ == null) {
					if (!other.trigInfo_.isEmpty()) {
						if (trigInfo_.isEmpty()) {
							trigInfo_ = other.trigInfo_;
							bitField0_ = (bitField0_ & ~0x00040000);
						} else {
							ensureTrigInfoIsMutable();
							trigInfo_.addAll(other.trigInfo_);
						}
						onChanged();
					}
				} else {
					if (!other.trigInfo_.isEmpty()) {
						if (trigInfoBuilder_.isEmpty()) {
							trigInfoBuilder_.dispose();
							trigInfoBuilder_ = null;
							trigInfo_ = other.trigInfo_;
							bitField0_ = (bitField0_ & ~0x00040000);
							trigInfoBuilder_ = com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ? getTrigInfoFieldBuilder()
									: null;
						} else {
							trigInfoBuilder_.addAllMessages(other.trigInfo_);
						}
					}
				}
				this.mergeUnknownFields(other.getUnknownFields());
				return this;
			}

			public final boolean isInitialized() {
				if (!hasLogId()) {

					return false;
				}
				if (!hasEventState()) {

					return false;
				}
				for (int i = 0; i < getRsltMsgCount(); i++) {
					if (!getRsltMsg(i).isInitialized()) {

						return false;
					}
				}
				for (int i = 0; i < getTrigInfoCount(); i++) {
					if (!getTrigInfo(i).isInitialized()) {

						return false;
					}
				}
				return true;
			}

			public Builder mergeFrom(
					com.google.protobuf.CodedInputStream input,
					com.google.protobuf.ExtensionRegistryLite extensionRegistry)
					throws java.io.IOException {
				net.zdsoft.officework.mqreceive.EventDis.CommEventLog parsedMessage = null;
				try {
					parsedMessage = PARSER.parsePartialFrom(input,
							extensionRegistry);
				} catch (com.google.protobuf.InvalidProtocolBufferException e) {
					parsedMessage = (net.zdsoft.officework.mqreceive.EventDis.CommEventLog) e
							.getUnfinishedMessage();
					throw e;
				} finally {
					if (parsedMessage != null) {
						mergeFrom(parsedMessage);
					}
				}
				return this;
			}

			private int bitField0_;

			private java.lang.Object logId_ = "";

			/**
			 * <code>required string log_id = 1;</code>
			 *
			 * <pre>
			 * 日志Id，唯一标识一次发生的事件
			 * </pre>
			 */
			public boolean hasLogId() {
				return ((bitField0_ & 0x00000001) == 0x00000001);
			}

			/**
			 * <code>required string log_id = 1;</code>
			 *
			 * <pre>
			 * 日志Id，唯一标识一次发生的事件
			 * </pre>
			 */
			public java.lang.String getLogId() {
				java.lang.Object ref = logId_;
				if (!(ref instanceof java.lang.String)) {
					com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
					java.lang.String s = bs.toStringUtf8();
					if (bs.isValidUtf8()) {
						logId_ = s;
					}
					return s;
				} else {
					return (java.lang.String) ref;
				}
			}

			/**
			 * <code>required string log_id = 1;</code>
			 *
			 * <pre>
			 * 日志Id，唯一标识一次发生的事件
			 * </pre>
			 */
			public com.google.protobuf.ByteString getLogIdBytes() {
				java.lang.Object ref = logId_;
				if (ref instanceof String) {
					com.google.protobuf.ByteString b = com.google.protobuf.ByteString
							.copyFromUtf8((java.lang.String) ref);
					logId_ = b;
					return b;
				} else {
					return (com.google.protobuf.ByteString) ref;
				}
			}

			/**
			 * <code>required string log_id = 1;</code>
			 *
			 * <pre>
			 * 日志Id，唯一标识一次发生的事件
			 * </pre>
			 */
			public Builder setLogId(java.lang.String value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00000001;
				logId_ = value;
				onChanged();
				return this;
			}

			/**
			 * <code>required string log_id = 1;</code>
			 *
			 * <pre>
			 * 日志Id，唯一标识一次发生的事件
			 * </pre>
			 */
			public Builder clearLogId() {
				bitField0_ = (bitField0_ & ~0x00000001);
				logId_ = getDefaultInstance().getLogId();
				onChanged();
				return this;
			}

			/**
			 * <code>required string log_id = 1;</code>
			 *
			 * <pre>
			 * 日志Id，唯一标识一次发生的事件
			 * </pre>
			 */
			public Builder setLogIdBytes(com.google.protobuf.ByteString value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00000001;
				logId_ = value;
				onChanged();
				return this;
			}

			private int eventState_;

			/**
			 * <code>required int32 event_state = 2;</code>
			 *
			 * <pre>
			 * 事件状态，事件状态为开始或者瞬时时保存事件，状态为结束时更新日志结束时间，状态为更新时保存联动结果
			 * </pre>
			 */
			public boolean hasEventState() {
				return ((bitField0_ & 0x00000002) == 0x00000002);
			}

			/**
			 * <code>required int32 event_state = 2;</code>
			 *
			 * <pre>
			 * 事件状态，事件状态为开始或者瞬时时保存事件，状态为结束时更新日志结束时间，状态为更新时保存联动结果
			 * </pre>
			 */
			public int getEventState() {
				return eventState_;
			}

			/**
			 * <code>required int32 event_state = 2;</code>
			 *
			 * <pre>
			 * 事件状态，事件状态为开始或者瞬时时保存事件，状态为结束时更新日志结束时间，状态为更新时保存联动结果
			 * </pre>
			 */
			public Builder setEventState(int value) {
				bitField0_ |= 0x00000002;
				eventState_ = value;
				onChanged();
				return this;
			}

			/**
			 * <code>required int32 event_state = 2;</code>
			 *
			 * <pre>
			 * 事件状态，事件状态为开始或者瞬时时保存事件，状态为结束时更新日志结束时间，状态为更新时保存联动结果
			 * </pre>
			 */
			public Builder clearEventState() {
				bitField0_ = (bitField0_ & ~0x00000002);
				eventState_ = 0;
				onChanged();
				return this;
			}

			private int eventLevel_;

			/**
			 * <code>optional int32 event_level = 3;</code>
			 *
			 * <pre>
			 * 事件等级
			 * </pre>
			 */
			public boolean hasEventLevel() {
				return ((bitField0_ & 0x00000004) == 0x00000004);
			}

			/**
			 * <code>optional int32 event_level = 3;</code>
			 *
			 * <pre>
			 * 事件等级
			 * </pre>
			 */
			public int getEventLevel() {
				return eventLevel_;
			}

			/**
			 * <code>optional int32 event_level = 3;</code>
			 *
			 * <pre>
			 * 事件等级
			 * </pre>
			 */
			public Builder setEventLevel(int value) {
				bitField0_ |= 0x00000004;
				eventLevel_ = value;
				onChanged();
				return this;
			}

			/**
			 * <code>optional int32 event_level = 3;</code>
			 *
			 * <pre>
			 * 事件等级
			 * </pre>
			 */
			public Builder clearEventLevel() {
				bitField0_ = (bitField0_ & ~0x00000004);
				eventLevel_ = 0;
				onChanged();
				return this;
			}

			private java.lang.Object unitIdx_ = "";

			/**
			 * <code>optional string unit_idx = 4;</code>
			 *
			 * <pre>
			 * 控制中心编号
			 * </pre>
			 */
			public boolean hasUnitIdx() {
				return ((bitField0_ & 0x00000008) == 0x00000008);
			}

			/**
			 * <code>optional string unit_idx = 4;</code>
			 *
			 * <pre>
			 * 控制中心编号
			 * </pre>
			 */
			public java.lang.String getUnitIdx() {
				java.lang.Object ref = unitIdx_;
				if (!(ref instanceof java.lang.String)) {
					com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
					java.lang.String s = bs.toStringUtf8();
					if (bs.isValidUtf8()) {
						unitIdx_ = s;
					}
					return s;
				} else {
					return (java.lang.String) ref;
				}
			}

			/**
			 * <code>optional string unit_idx = 4;</code>
			 *
			 * <pre>
			 * 控制中心编号
			 * </pre>
			 */
			public com.google.protobuf.ByteString getUnitIdxBytes() {
				java.lang.Object ref = unitIdx_;
				if (ref instanceof String) {
					com.google.protobuf.ByteString b = com.google.protobuf.ByteString
							.copyFromUtf8((java.lang.String) ref);
					unitIdx_ = b;
					return b;
				} else {
					return (com.google.protobuf.ByteString) ref;
				}
			}

			/**
			 * <code>optional string unit_idx = 4;</code>
			 *
			 * <pre>
			 * 控制中心编号
			 * </pre>
			 */
			public Builder setUnitIdx(java.lang.String value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00000008;
				unitIdx_ = value;
				onChanged();
				return this;
			}

			/**
			 * <code>optional string unit_idx = 4;</code>
			 *
			 * <pre>
			 * 控制中心编号
			 * </pre>
			 */
			public Builder clearUnitIdx() {
				bitField0_ = (bitField0_ & ~0x00000008);
				unitIdx_ = getDefaultInstance().getUnitIdx();
				onChanged();
				return this;
			}

			/**
			 * <code>optional string unit_idx = 4;</code>
			 *
			 * <pre>
			 * 控制中心编号
			 * </pre>
			 */
			public Builder setUnitIdxBytes(com.google.protobuf.ByteString value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00000008;
				unitIdx_ = value;
				onChanged();
				return this;
			}

			private int eventType_;

			/**
			 * <code>optional int32 event_type = 5;</code>
			 *
			 * <pre>
			 * 事件类型
			 * </pre>
			 */
			public boolean hasEventType() {
				return ((bitField0_ & 0x00000010) == 0x00000010);
			}

			/**
			 * <code>optional int32 event_type = 5;</code>
			 *
			 * <pre>
			 * 事件类型
			 * </pre>
			 */
			public int getEventType() {
				return eventType_;
			}

			/**
			 * <code>optional int32 event_type = 5;</code>
			 *
			 * <pre>
			 * 事件类型
			 * </pre>
			 */
			public Builder setEventType(int value) {
				bitField0_ |= 0x00000010;
				eventType_ = value;
				onChanged();
				return this;
			}

			/**
			 * <code>optional int32 event_type = 5;</code>
			 *
			 * <pre>
			 * 事件类型
			 * </pre>
			 */
			public Builder clearEventType() {
				bitField0_ = (bitField0_ & ~0x00000010);
				eventType_ = 0;
				onChanged();
				return this;
			}

			private java.lang.Object eventTypeName_ = "";

			/**
			 * <code>optional string event_type_name = 6;</code>
			 *
			 * <pre>
			 * 事件类型名称
			 * </pre>
			 */
			public boolean hasEventTypeName() {
				return ((bitField0_ & 0x00000020) == 0x00000020);
			}

			/**
			 * <code>optional string event_type_name = 6;</code>
			 *
			 * <pre>
			 * 事件类型名称
			 * </pre>
			 */
			public java.lang.String getEventTypeName() {
				java.lang.Object ref = eventTypeName_;
				if (!(ref instanceof java.lang.String)) {
					com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
					java.lang.String s = bs.toStringUtf8();
					if (bs.isValidUtf8()) {
						eventTypeName_ = s;
					}
					return s;
				} else {
					return (java.lang.String) ref;
				}
			}

			/**
			 * <code>optional string event_type_name = 6;</code>
			 *
			 * <pre>
			 * 事件类型名称
			 * </pre>
			 */
			public com.google.protobuf.ByteString getEventTypeNameBytes() {
				java.lang.Object ref = eventTypeName_;
				if (ref instanceof String) {
					com.google.protobuf.ByteString b = com.google.protobuf.ByteString
							.copyFromUtf8((java.lang.String) ref);
					eventTypeName_ = b;
					return b;
				} else {
					return (com.google.protobuf.ByteString) ref;
				}
			}

			/**
			 * <code>optional string event_type_name = 6;</code>
			 *
			 * <pre>
			 * 事件类型名称
			 * </pre>
			 */
			public Builder setEventTypeName(java.lang.String value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00000020;
				eventTypeName_ = value;
				onChanged();
				return this;
			}

			/**
			 * <code>optional string event_type_name = 6;</code>
			 *
			 * <pre>
			 * 事件类型名称
			 * </pre>
			 */
			public Builder clearEventTypeName() {
				bitField0_ = (bitField0_ & ~0x00000020);
				eventTypeName_ = getDefaultInstance().getEventTypeName();
				onChanged();
				return this;
			}

			/**
			 * <code>optional string event_type_name = 6;</code>
			 *
			 * <pre>
			 * 事件类型名称
			 * </pre>
			 */
			public Builder setEventTypeNameBytes(
					com.google.protobuf.ByteString value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00000020;
				eventTypeName_ = value;
				onChanged();
				return this;
			}

			private int subSysType_;

			/**
			 * <code>optional int32 sub_sys_type = 7;</code>
			 *
			 * <pre>
			 * 事件所属子系统类型，废弃，事件整改，没有子系统属性了2015-10-28 13:45:13
			 * </pre>
			 */
			public boolean hasSubSysType() {
				return ((bitField0_ & 0x00000040) == 0x00000040);
			}

			/**
			 * <code>optional int32 sub_sys_type = 7;</code>
			 *
			 * <pre>
			 * 事件所属子系统类型，废弃，事件整改，没有子系统属性了2015-10-28 13:45:13
			 * </pre>
			 */
			public int getSubSysType() {
				return subSysType_;
			}

			/**
			 * <code>optional int32 sub_sys_type = 7;</code>
			 *
			 * <pre>
			 * 事件所属子系统类型，废弃，事件整改，没有子系统属性了2015-10-28 13:45:13
			 * </pre>
			 */
			public Builder setSubSysType(int value) {
				bitField0_ |= 0x00000040;
				subSysType_ = value;
				onChanged();
				return this;
			}

			/**
			 * <code>optional int32 sub_sys_type = 7;</code>
			 *
			 * <pre>
			 * 事件所属子系统类型，废弃，事件整改，没有子系统属性了2015-10-28 13:45:13
			 * </pre>
			 */
			public Builder clearSubSysType() {
				bitField0_ = (bitField0_ & ~0x00000040);
				subSysType_ = 0;
				onChanged();
				return this;
			}

			private java.lang.Object eventName_ = "";

			/**
			 * <code>optional string event_name = 8;</code>
			 *
			 * <pre>
			 * 事件名称
			 * </pre>
			 */
			public boolean hasEventName() {
				return ((bitField0_ & 0x00000080) == 0x00000080);
			}

			/**
			 * <code>optional string event_name = 8;</code>
			 *
			 * <pre>
			 * 事件名称
			 * </pre>
			 */
			public java.lang.String getEventName() {
				java.lang.Object ref = eventName_;
				if (!(ref instanceof java.lang.String)) {
					com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
					java.lang.String s = bs.toStringUtf8();
					if (bs.isValidUtf8()) {
						eventName_ = s;
					}
					return s;
				} else {
					return (java.lang.String) ref;
				}
			}

			/**
			 * <code>optional string event_name = 8;</code>
			 *
			 * <pre>
			 * 事件名称
			 * </pre>
			 */
			public com.google.protobuf.ByteString getEventNameBytes() {
				java.lang.Object ref = eventName_;
				if (ref instanceof String) {
					com.google.protobuf.ByteString b = com.google.protobuf.ByteString
							.copyFromUtf8((java.lang.String) ref);
					eventName_ = b;
					return b;
				} else {
					return (com.google.protobuf.ByteString) ref;
				}
			}

			/**
			 * <code>optional string event_name = 8;</code>
			 *
			 * <pre>
			 * 事件名称
			 * </pre>
			 */
			public Builder setEventName(java.lang.String value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00000080;
				eventName_ = value;
				onChanged();
				return this;
			}

			/**
			 * <code>optional string event_name = 8;</code>
			 *
			 * <pre>
			 * 事件名称
			 * </pre>
			 */
			public Builder clearEventName() {
				bitField0_ = (bitField0_ & ~0x00000080);
				eventName_ = getDefaultInstance().getEventName();
				onChanged();
				return this;
			}

			/**
			 * <code>optional string event_name = 8;</code>
			 *
			 * <pre>
			 * 事件名称
			 * </pre>
			 */
			public Builder setEventNameBytes(
					com.google.protobuf.ByteString value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00000080;
				eventName_ = value;
				onChanged();
				return this;
			}

			private java.lang.Object startTime_ = "";

			/**
			 * <code>optional string start_time = 9;</code>
			 *
			 * <pre>
			 * 开始时间
			 * </pre>
			 */
			public boolean hasStartTime() {
				return ((bitField0_ & 0x00000100) == 0x00000100);
			}

			/**
			 * <code>optional string start_time = 9;</code>
			 *
			 * <pre>
			 * 开始时间
			 * </pre>
			 */
			public java.lang.String getStartTime() {
				java.lang.Object ref = startTime_;
				if (!(ref instanceof java.lang.String)) {
					com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
					java.lang.String s = bs.toStringUtf8();
					if (bs.isValidUtf8()) {
						startTime_ = s;
					}
					return s;
				} else {
					return (java.lang.String) ref;
				}
			}

			/**
			 * <code>optional string start_time = 9;</code>
			 *
			 * <pre>
			 * 开始时间
			 * </pre>
			 */
			public com.google.protobuf.ByteString getStartTimeBytes() {
				java.lang.Object ref = startTime_;
				if (ref instanceof String) {
					com.google.protobuf.ByteString b = com.google.protobuf.ByteString
							.copyFromUtf8((java.lang.String) ref);
					startTime_ = b;
					return b;
				} else {
					return (com.google.protobuf.ByteString) ref;
				}
			}

			/**
			 * <code>optional string start_time = 9;</code>
			 *
			 * <pre>
			 * 开始时间
			 * </pre>
			 */
			public Builder setStartTime(java.lang.String value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00000100;
				startTime_ = value;
				onChanged();
				return this;
			}

			/**
			 * <code>optional string start_time = 9;</code>
			 *
			 * <pre>
			 * 开始时间
			 * </pre>
			 */
			public Builder clearStartTime() {
				bitField0_ = (bitField0_ & ~0x00000100);
				startTime_ = getDefaultInstance().getStartTime();
				onChanged();
				return this;
			}

			/**
			 * <code>optional string start_time = 9;</code>
			 *
			 * <pre>
			 * 开始时间
			 * </pre>
			 */
			public Builder setStartTimeBytes(
					com.google.protobuf.ByteString value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00000100;
				startTime_ = value;
				onChanged();
				return this;
			}

			private java.lang.Object stopTime_ = "";

			/**
			 * <code>optional string stop_time = 10;</code>
			 *
			 * <pre>
			 * 结束时间
			 * </pre>
			 */
			public boolean hasStopTime() {
				return ((bitField0_ & 0x00000200) == 0x00000200);
			}

			/**
			 * <code>optional string stop_time = 10;</code>
			 *
			 * <pre>
			 * 结束时间
			 * </pre>
			 */
			public java.lang.String getStopTime() {
				java.lang.Object ref = stopTime_;
				if (!(ref instanceof java.lang.String)) {
					com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
					java.lang.String s = bs.toStringUtf8();
					if (bs.isValidUtf8()) {
						stopTime_ = s;
					}
					return s;
				} else {
					return (java.lang.String) ref;
				}
			}

			/**
			 * <code>optional string stop_time = 10;</code>
			 *
			 * <pre>
			 * 结束时间
			 * </pre>
			 */
			public com.google.protobuf.ByteString getStopTimeBytes() {
				java.lang.Object ref = stopTime_;
				if (ref instanceof String) {
					com.google.protobuf.ByteString b = com.google.protobuf.ByteString
							.copyFromUtf8((java.lang.String) ref);
					stopTime_ = b;
					return b;
				} else {
					return (com.google.protobuf.ByteString) ref;
				}
			}

			/**
			 * <code>optional string stop_time = 10;</code>
			 *
			 * <pre>
			 * 结束时间
			 * </pre>
			 */
			public Builder setStopTime(java.lang.String value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00000200;
				stopTime_ = value;
				onChanged();
				return this;
			}

			/**
			 * <code>optional string stop_time = 10;</code>
			 *
			 * <pre>
			 * 结束时间
			 * </pre>
			 */
			public Builder clearStopTime() {
				bitField0_ = (bitField0_ & ~0x00000200);
				stopTime_ = getDefaultInstance().getStopTime();
				onChanged();
				return this;
			}

			/**
			 * <code>optional string stop_time = 10;</code>
			 *
			 * <pre>
			 * 结束时间
			 * </pre>
			 */
			public Builder setStopTimeBytes(com.google.protobuf.ByteString value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00000200;
				stopTime_ = value;
				onChanged();
				return this;
			}

			private java.lang.Object sourceIdx_ = "";

			/**
			 * <code>optional string source_idx = 11;</code>
			 *
			 * <pre>
			 * 事件源编号
			 * </pre>
			 */
			public boolean hasSourceIdx() {
				return ((bitField0_ & 0x00000400) == 0x00000400);
			}

			/**
			 * <code>optional string source_idx = 11;</code>
			 *
			 * <pre>
			 * 事件源编号
			 * </pre>
			 */
			public java.lang.String getSourceIdx() {
				java.lang.Object ref = sourceIdx_;
				if (!(ref instanceof java.lang.String)) {
					com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
					java.lang.String s = bs.toStringUtf8();
					if (bs.isValidUtf8()) {
						sourceIdx_ = s;
					}
					return s;
				} else {
					return (java.lang.String) ref;
				}
			}

			/**
			 * <code>optional string source_idx = 11;</code>
			 *
			 * <pre>
			 * 事件源编号
			 * </pre>
			 */
			public com.google.protobuf.ByteString getSourceIdxBytes() {
				java.lang.Object ref = sourceIdx_;
				if (ref instanceof String) {
					com.google.protobuf.ByteString b = com.google.protobuf.ByteString
							.copyFromUtf8((java.lang.String) ref);
					sourceIdx_ = b;
					return b;
				} else {
					return (com.google.protobuf.ByteString) ref;
				}
			}

			/**
			 * <code>optional string source_idx = 11;</code>
			 *
			 * <pre>
			 * 事件源编号
			 * </pre>
			 */
			public Builder setSourceIdx(java.lang.String value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00000400;
				sourceIdx_ = value;
				onChanged();
				return this;
			}

			/**
			 * <code>optional string source_idx = 11;</code>
			 *
			 * <pre>
			 * 事件源编号
			 * </pre>
			 */
			public Builder clearSourceIdx() {
				bitField0_ = (bitField0_ & ~0x00000400);
				sourceIdx_ = getDefaultInstance().getSourceIdx();
				onChanged();
				return this;
			}

			/**
			 * <code>optional string source_idx = 11;</code>
			 *
			 * <pre>
			 * 事件源编号
			 * </pre>
			 */
			public Builder setSourceIdxBytes(
					com.google.protobuf.ByteString value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00000400;
				sourceIdx_ = value;
				onChanged();
				return this;
			}

			private int sourceType_;

			/**
			 * <code>optional int32 source_type = 12;</code>
			 *
			 * <pre>
			 * 事件源类型
			 * </pre>
			 */
			public boolean hasSourceType() {
				return ((bitField0_ & 0x00000800) == 0x00000800);
			}

			/**
			 * <code>optional int32 source_type = 12;</code>
			 *
			 * <pre>
			 * 事件源类型
			 * </pre>
			 */
			public int getSourceType() {
				return sourceType_;
			}

			/**
			 * <code>optional int32 source_type = 12;</code>
			 *
			 * <pre>
			 * 事件源类型
			 * </pre>
			 */
			public Builder setSourceType(int value) {
				bitField0_ |= 0x00000800;
				sourceType_ = value;
				onChanged();
				return this;
			}

			/**
			 * <code>optional int32 source_type = 12;</code>
			 *
			 * <pre>
			 * 事件源类型
			 * </pre>
			 */
			public Builder clearSourceType() {
				bitField0_ = (bitField0_ & ~0x00000800);
				sourceType_ = 0;
				onChanged();
				return this;
			}

			private java.lang.Object sourceName_ = "";

			/**
			 * <code>optional string source_name = 13;</code>
			 *
			 * <pre>
			 * 事件源名称
			 * </pre>
			 */
			public boolean hasSourceName() {
				return ((bitField0_ & 0x00001000) == 0x00001000);
			}

			/**
			 * <code>optional string source_name = 13;</code>
			 *
			 * <pre>
			 * 事件源名称
			 * </pre>
			 */
			public java.lang.String getSourceName() {
				java.lang.Object ref = sourceName_;
				if (!(ref instanceof java.lang.String)) {
					com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
					java.lang.String s = bs.toStringUtf8();
					if (bs.isValidUtf8()) {
						sourceName_ = s;
					}
					return s;
				} else {
					return (java.lang.String) ref;
				}
			}

			/**
			 * <code>optional string source_name = 13;</code>
			 *
			 * <pre>
			 * 事件源名称
			 * </pre>
			 */
			public com.google.protobuf.ByteString getSourceNameBytes() {
				java.lang.Object ref = sourceName_;
				if (ref instanceof String) {
					com.google.protobuf.ByteString b = com.google.protobuf.ByteString
							.copyFromUtf8((java.lang.String) ref);
					sourceName_ = b;
					return b;
				} else {
					return (com.google.protobuf.ByteString) ref;
				}
			}

			/**
			 * <code>optional string source_name = 13;</code>
			 *
			 * <pre>
			 * 事件源名称
			 * </pre>
			 */
			public Builder setSourceName(java.lang.String value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00001000;
				sourceName_ = value;
				onChanged();
				return this;
			}

			/**
			 * <code>optional string source_name = 13;</code>
			 *
			 * <pre>
			 * 事件源名称
			 * </pre>
			 */
			public Builder clearSourceName() {
				bitField0_ = (bitField0_ & ~0x00001000);
				sourceName_ = getDefaultInstance().getSourceName();
				onChanged();
				return this;
			}

			/**
			 * <code>optional string source_name = 13;</code>
			 *
			 * <pre>
			 * 事件源名称
			 * </pre>
			 */
			public Builder setSourceNameBytes(
					com.google.protobuf.ByteString value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00001000;
				sourceName_ = value;
				onChanged();
				return this;
			}

			private java.lang.Object logTxt_ = "";

			/**
			 * <code>optional string log_txt = 14;</code>
			 *
			 * <pre>
			 * 事件描述信息
			 * </pre>
			 */
			public boolean hasLogTxt() {
				return ((bitField0_ & 0x00002000) == 0x00002000);
			}

			/**
			 * <code>optional string log_txt = 14;</code>
			 *
			 * <pre>
			 * 事件描述信息
			 * </pre>
			 */
			public java.lang.String getLogTxt() {
				java.lang.Object ref = logTxt_;
				if (!(ref instanceof java.lang.String)) {
					com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
					java.lang.String s = bs.toStringUtf8();
					if (bs.isValidUtf8()) {
						logTxt_ = s;
					}
					return s;
				} else {
					return (java.lang.String) ref;
				}
			}

			/**
			 * <code>optional string log_txt = 14;</code>
			 *
			 * <pre>
			 * 事件描述信息
			 * </pre>
			 */
			public com.google.protobuf.ByteString getLogTxtBytes() {
				java.lang.Object ref = logTxt_;
				if (ref instanceof String) {
					com.google.protobuf.ByteString b = com.google.protobuf.ByteString
							.copyFromUtf8((java.lang.String) ref);
					logTxt_ = b;
					return b;
				} else {
					return (com.google.protobuf.ByteString) ref;
				}
			}

			/**
			 * <code>optional string log_txt = 14;</code>
			 *
			 * <pre>
			 * 事件描述信息
			 * </pre>
			 */
			public Builder setLogTxt(java.lang.String value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00002000;
				logTxt_ = value;
				onChanged();
				return this;
			}

			/**
			 * <code>optional string log_txt = 14;</code>
			 *
			 * <pre>
			 * 事件描述信息
			 * </pre>
			 */
			public Builder clearLogTxt() {
				bitField0_ = (bitField0_ & ~0x00002000);
				logTxt_ = getDefaultInstance().getLogTxt();
				onChanged();
				return this;
			}

			/**
			 * <code>optional string log_txt = 14;</code>
			 *
			 * <pre>
			 * 事件描述信息
			 * </pre>
			 */
			public Builder setLogTxtBytes(com.google.protobuf.ByteString value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00002000;
				logTxt_ = value;
				onChanged();
				return this;
			}

			private java.lang.Object regionIdx_ = "";

			/**
			 * <code>optional string region_idx = 15;</code>
			 *
			 * <pre>
			 * 事件源区域编号，可选
			 * </pre>
			 */
			public boolean hasRegionIdx() {
				return ((bitField0_ & 0x00004000) == 0x00004000);
			}

			/**
			 * <code>optional string region_idx = 15;</code>
			 *
			 * <pre>
			 * 事件源区域编号，可选
			 * </pre>
			 */
			public java.lang.String getRegionIdx() {
				java.lang.Object ref = regionIdx_;
				if (!(ref instanceof java.lang.String)) {
					com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
					java.lang.String s = bs.toStringUtf8();
					if (bs.isValidUtf8()) {
						regionIdx_ = s;
					}
					return s;
				} else {
					return (java.lang.String) ref;
				}
			}

			/**
			 * <code>optional string region_idx = 15;</code>
			 *
			 * <pre>
			 * 事件源区域编号，可选
			 * </pre>
			 */
			public com.google.protobuf.ByteString getRegionIdxBytes() {
				java.lang.Object ref = regionIdx_;
				if (ref instanceof String) {
					com.google.protobuf.ByteString b = com.google.protobuf.ByteString
							.copyFromUtf8((java.lang.String) ref);
					regionIdx_ = b;
					return b;
				} else {
					return (com.google.protobuf.ByteString) ref;
				}
			}

			/**
			 * <code>optional string region_idx = 15;</code>
			 *
			 * <pre>
			 * 事件源区域编号，可选
			 * </pre>
			 */
			public Builder setRegionIdx(java.lang.String value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00004000;
				regionIdx_ = value;
				onChanged();
				return this;
			}

			/**
			 * <code>optional string region_idx = 15;</code>
			 *
			 * <pre>
			 * 事件源区域编号，可选
			 * </pre>
			 */
			public Builder clearRegionIdx() {
				bitField0_ = (bitField0_ & ~0x00004000);
				regionIdx_ = getDefaultInstance().getRegionIdx();
				onChanged();
				return this;
			}

			/**
			 * <code>optional string region_idx = 15;</code>
			 *
			 * <pre>
			 * 事件源区域编号，可选
			 * </pre>
			 */
			public Builder setRegionIdxBytes(
					com.google.protobuf.ByteString value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00004000;
				regionIdx_ = value;
				onChanged();
				return this;
			}

			private com.google.protobuf.ByteString extInfo_ = com.google.protobuf.ByteString.EMPTY;

			/**
			 * <code>optional bytes ext_info = 20;</code>
			 *
			 * <pre>
			 * 事件扩展信息,各个子系统根据子系统的消息结构体定义解析
			 * </pre>
			 */
			public boolean hasExtInfo() {
				return ((bitField0_ & 0x00008000) == 0x00008000);
			}

			/**
			 * <code>optional bytes ext_info = 20;</code>
			 *
			 * <pre>
			 * 事件扩展信息,各个子系统根据子系统的消息结构体定义解析
			 * </pre>
			 */
			public com.google.protobuf.ByteString getExtInfo() {
				return extInfo_;
			}

			/**
			 * <code>optional bytes ext_info = 20;</code>
			 *
			 * <pre>
			 * 事件扩展信息,各个子系统根据子系统的消息结构体定义解析
			 * </pre>
			 */
			public Builder setExtInfo(com.google.protobuf.ByteString value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00008000;
				extInfo_ = value;
				onChanged();
				return this;
			}

			/**
			 * <code>optional bytes ext_info = 20;</code>
			 *
			 * <pre>
			 * 事件扩展信息,各个子系统根据子系统的消息结构体定义解析
			 * </pre>
			 */
			public Builder clearExtInfo() {
				bitField0_ = (bitField0_ & ~0x00008000);
				extInfo_ = getDefaultInstance().getExtInfo();
				onChanged();
				return this;
			}

			private java.util.List<java.lang.Integer> userId_ = java.util.Collections
					.emptyList();

			private void ensureUserIdIsMutable() {
				if (!((bitField0_ & 0x00010000) == 0x00010000)) {
					userId_ = new java.util.ArrayList<java.lang.Integer>(
							userId_);
					bitField0_ |= 0x00010000;
				}
			}

			/**
			 * <code>repeated int32 user_id = 21;</code>
			 *
			 * <pre>
			 * 事件接收的User Id数组,用于日志查询权限控制
			 * </pre>
			 */
			public java.util.List<java.lang.Integer> getUserIdList() {
				return java.util.Collections.unmodifiableList(userId_);
			}

			/**
			 * <code>repeated int32 user_id = 21;</code>
			 *
			 * <pre>
			 * 事件接收的User Id数组,用于日志查询权限控制
			 * </pre>
			 */
			public int getUserIdCount() {
				return userId_.size();
			}

			/**
			 * <code>repeated int32 user_id = 21;</code>
			 *
			 * <pre>
			 * 事件接收的User Id数组,用于日志查询权限控制
			 * </pre>
			 */
			public int getUserId(int index) {
				return userId_.get(index);
			}

			/**
			 * <code>repeated int32 user_id = 21;</code>
			 *
			 * <pre>
			 * 事件接收的User Id数组,用于日志查询权限控制
			 * </pre>
			 */
			public Builder setUserId(int index, int value) {
				ensureUserIdIsMutable();
				userId_.set(index, value);
				onChanged();
				return this;
			}

			/**
			 * <code>repeated int32 user_id = 21;</code>
			 *
			 * <pre>
			 * 事件接收的User Id数组,用于日志查询权限控制
			 * </pre>
			 */
			public Builder addUserId(int value) {
				ensureUserIdIsMutable();
				userId_.add(value);
				onChanged();
				return this;
			}

			/**
			 * <code>repeated int32 user_id = 21;</code>
			 *
			 * <pre>
			 * 事件接收的User Id数组,用于日志查询权限控制
			 * </pre>
			 */
			public Builder addAllUserId(
					java.lang.Iterable<? extends java.lang.Integer> values) {
				ensureUserIdIsMutable();
				com.google.protobuf.AbstractMessageLite.Builder.addAll(values,
						userId_);
				onChanged();
				return this;
			}

			/**
			 * <code>repeated int32 user_id = 21;</code>
			 *
			 * <pre>
			 * 事件接收的User Id数组,用于日志查询权限控制
			 * </pre>
			 */
			public Builder clearUserId() {
				userId_ = java.util.Collections.emptyList();
				bitField0_ = (bitField0_ & ~0x00010000);
				onChanged();
				return this;
			}

			private java.util.List<net.zdsoft.officework.mqreceive.Comm.TriggerResult> rsltMsg_ = java.util.Collections
					.emptyList();

			private void ensureRsltMsgIsMutable() {
				if (!((bitField0_ & 0x00020000) == 0x00020000)) {
					rsltMsg_ = new java.util.ArrayList<net.zdsoft.officework.mqreceive.Comm.TriggerResult>(
							rsltMsg_);
					bitField0_ |= 0x00020000;
				}
			}

			private com.google.protobuf.RepeatedFieldBuilder<net.zdsoft.officework.mqreceive.Comm.TriggerResult, net.zdsoft.officework.mqreceive.Comm.TriggerResult.Builder, net.zdsoft.officework.mqreceive.Comm.TriggerResultOrBuilder> rsltMsgBuilder_;

			/**
			 * <code>repeated .net.zdsoft.officework.mqreceive.TriggerResult rslt_msg = 33;</code>
			 *
			 * <pre>
			 * 事件处理结果，当event_state为更新时使用
			 * </pre>
			 */
			public java.util.List<net.zdsoft.officework.mqreceive.Comm.TriggerResult> getRsltMsgList() {
				if (rsltMsgBuilder_ == null) {
					return java.util.Collections.unmodifiableList(rsltMsg_);
				} else {
					return rsltMsgBuilder_.getMessageList();
				}
			}

			/**
			 * <code>repeated .net.zdsoft.officework.mqreceive.TriggerResult rslt_msg = 33;</code>
			 *
			 * <pre>
			 * 事件处理结果，当event_state为更新时使用
			 * </pre>
			 */
			public int getRsltMsgCount() {
				if (rsltMsgBuilder_ == null) {
					return rsltMsg_.size();
				} else {
					return rsltMsgBuilder_.getCount();
				}
			}

			/**
			 * <code>repeated .net.zdsoft.officework.mqreceive.TriggerResult rslt_msg = 33;</code>
			 *
			 * <pre>
			 * 事件处理结果，当event_state为更新时使用
			 * </pre>
			 */
			public net.zdsoft.officework.mqreceive.Comm.TriggerResult getRsltMsg(
					int index) {
				if (rsltMsgBuilder_ == null) {
					return rsltMsg_.get(index);
				} else {
					return rsltMsgBuilder_.getMessage(index);
				}
			}

			/**
			 * <code>repeated .net.zdsoft.officework.mqreceive.TriggerResult rslt_msg = 33;</code>
			 *
			 * <pre>
			 * 事件处理结果，当event_state为更新时使用
			 * </pre>
			 */
			public Builder setRsltMsg(int index,
					net.zdsoft.officework.mqreceive.Comm.TriggerResult value) {
				if (rsltMsgBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					ensureRsltMsgIsMutable();
					rsltMsg_.set(index, value);
					onChanged();
				} else {
					rsltMsgBuilder_.setMessage(index, value);
				}
				return this;
			}

			/**
			 * <code>repeated .net.zdsoft.officework.mqreceive.TriggerResult rslt_msg = 33;</code>
			 *
			 * <pre>
			 * 事件处理结果，当event_state为更新时使用
			 * </pre>
			 */
			public Builder setRsltMsg(
					int index,
					net.zdsoft.officework.mqreceive.Comm.TriggerResult.Builder builderForValue) {
				if (rsltMsgBuilder_ == null) {
					ensureRsltMsgIsMutable();
					rsltMsg_.set(index, builderForValue.build());
					onChanged();
				} else {
					rsltMsgBuilder_.setMessage(index, builderForValue.build());
				}
				return this;
			}

			/**
			 * <code>repeated .net.zdsoft.officework.mqreceive.TriggerResult rslt_msg = 33;</code>
			 *
			 * <pre>
			 * 事件处理结果，当event_state为更新时使用
			 * </pre>
			 */
			public Builder addRsltMsg(
					net.zdsoft.officework.mqreceive.Comm.TriggerResult value) {
				if (rsltMsgBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					ensureRsltMsgIsMutable();
					rsltMsg_.add(value);
					onChanged();
				} else {
					rsltMsgBuilder_.addMessage(value);
				}
				return this;
			}

			/**
			 * <code>repeated .net.zdsoft.officework.mqreceive.TriggerResult rslt_msg = 33;</code>
			 *
			 * <pre>
			 * 事件处理结果，当event_state为更新时使用
			 * </pre>
			 */
			public Builder addRsltMsg(int index,
					net.zdsoft.officework.mqreceive.Comm.TriggerResult value) {
				if (rsltMsgBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					ensureRsltMsgIsMutable();
					rsltMsg_.add(index, value);
					onChanged();
				} else {
					rsltMsgBuilder_.addMessage(index, value);
				}
				return this;
			}

			/**
			 * <code>repeated .net.zdsoft.officework.mqreceive.TriggerResult rslt_msg = 33;</code>
			 *
			 * <pre>
			 * 事件处理结果，当event_state为更新时使用
			 * </pre>
			 */
			public Builder addRsltMsg(
					net.zdsoft.officework.mqreceive.Comm.TriggerResult.Builder builderForValue) {
				if (rsltMsgBuilder_ == null) {
					ensureRsltMsgIsMutable();
					rsltMsg_.add(builderForValue.build());
					onChanged();
				} else {
					rsltMsgBuilder_.addMessage(builderForValue.build());
				}
				return this;
			}

			/**
			 * <code>repeated .net.zdsoft.officework.mqreceive.TriggerResult rslt_msg = 33;</code>
			 *
			 * <pre>
			 * 事件处理结果，当event_state为更新时使用
			 * </pre>
			 */
			public Builder addRsltMsg(
					int index,
					net.zdsoft.officework.mqreceive.Comm.TriggerResult.Builder builderForValue) {
				if (rsltMsgBuilder_ == null) {
					ensureRsltMsgIsMutable();
					rsltMsg_.add(index, builderForValue.build());
					onChanged();
				} else {
					rsltMsgBuilder_.addMessage(index, builderForValue.build());
				}
				return this;
			}

			/**
			 * <code>repeated .net.zdsoft.officework.mqreceive.TriggerResult rslt_msg = 33;</code>
			 *
			 * <pre>
			 * 事件处理结果，当event_state为更新时使用
			 * </pre>
			 */
			public Builder addAllRsltMsg(
					java.lang.Iterable<? extends net.zdsoft.officework.mqreceive.Comm.TriggerResult> values) {
				if (rsltMsgBuilder_ == null) {
					ensureRsltMsgIsMutable();
					com.google.protobuf.AbstractMessageLite.Builder.addAll(
							values, rsltMsg_);
					onChanged();
				} else {
					rsltMsgBuilder_.addAllMessages(values);
				}
				return this;
			}

			/**
			 * <code>repeated .net.zdsoft.officework.mqreceive.TriggerResult rslt_msg = 33;</code>
			 *
			 * <pre>
			 * 事件处理结果，当event_state为更新时使用
			 * </pre>
			 */
			public Builder clearRsltMsg() {
				if (rsltMsgBuilder_ == null) {
					rsltMsg_ = java.util.Collections.emptyList();
					bitField0_ = (bitField0_ & ~0x00020000);
					onChanged();
				} else {
					rsltMsgBuilder_.clear();
				}
				return this;
			}

			/**
			 * <code>repeated .net.zdsoft.officework.mqreceive.TriggerResult rslt_msg = 33;</code>
			 *
			 * <pre>
			 * 事件处理结果，当event_state为更新时使用
			 * </pre>
			 */
			public Builder removeRsltMsg(int index) {
				if (rsltMsgBuilder_ == null) {
					ensureRsltMsgIsMutable();
					rsltMsg_.remove(index);
					onChanged();
				} else {
					rsltMsgBuilder_.remove(index);
				}
				return this;
			}

			/**
			 * <code>repeated .net.zdsoft.officework.mqreceive.TriggerResult rslt_msg = 33;</code>
			 *
			 * <pre>
			 * 事件处理结果，当event_state为更新时使用
			 * </pre>
			 */
			public net.zdsoft.officework.mqreceive.Comm.TriggerResult.Builder getRsltMsgBuilder(
					int index) {
				return getRsltMsgFieldBuilder().getBuilder(index);
			}

			/**
			 * <code>repeated .net.zdsoft.officework.mqreceive.TriggerResult rslt_msg = 33;</code>
			 *
			 * <pre>
			 * 事件处理结果，当event_state为更新时使用
			 * </pre>
			 */
			public net.zdsoft.officework.mqreceive.Comm.TriggerResultOrBuilder getRsltMsgOrBuilder(
					int index) {
				if (rsltMsgBuilder_ == null) {
					return rsltMsg_.get(index);
				} else {
					return rsltMsgBuilder_.getMessageOrBuilder(index);
				}
			}

			/**
			 * <code>repeated .net.zdsoft.officework.mqreceive.TriggerResult rslt_msg = 33;</code>
			 *
			 * <pre>
			 * 事件处理结果，当event_state为更新时使用
			 * </pre>
			 */
			public java.util.List<? extends net.zdsoft.officework.mqreceive.Comm.TriggerResultOrBuilder> getRsltMsgOrBuilderList() {
				if (rsltMsgBuilder_ != null) {
					return rsltMsgBuilder_.getMessageOrBuilderList();
				} else {
					return java.util.Collections.unmodifiableList(rsltMsg_);
				}
			}

			/**
			 * <code>repeated .net.zdsoft.officework.mqreceive.TriggerResult rslt_msg = 33;</code>
			 *
			 * <pre>
			 * 事件处理结果，当event_state为更新时使用
			 * </pre>
			 */
			public net.zdsoft.officework.mqreceive.Comm.TriggerResult.Builder addRsltMsgBuilder() {
				return getRsltMsgFieldBuilder().addBuilder(
						net.zdsoft.officework.mqreceive.Comm.TriggerResult
								.getDefaultInstance());
			}

			/**
			 * <code>repeated .net.zdsoft.officework.mqreceive.TriggerResult rslt_msg = 33;</code>
			 *
			 * <pre>
			 * 事件处理结果，当event_state为更新时使用
			 * </pre>
			 */
			public net.zdsoft.officework.mqreceive.Comm.TriggerResult.Builder addRsltMsgBuilder(
					int index) {
				return getRsltMsgFieldBuilder().addBuilder(
						index,
						net.zdsoft.officework.mqreceive.Comm.TriggerResult
								.getDefaultInstance());
			}

			/**
			 * <code>repeated .net.zdsoft.officework.mqreceive.TriggerResult rslt_msg = 33;</code>
			 *
			 * <pre>
			 * 事件处理结果，当event_state为更新时使用
			 * </pre>
			 */
			public java.util.List<net.zdsoft.officework.mqreceive.Comm.TriggerResult.Builder> getRsltMsgBuilderList() {
				return getRsltMsgFieldBuilder().getBuilderList();
			}

			private com.google.protobuf.RepeatedFieldBuilder<net.zdsoft.officework.mqreceive.Comm.TriggerResult, net.zdsoft.officework.mqreceive.Comm.TriggerResult.Builder, net.zdsoft.officework.mqreceive.Comm.TriggerResultOrBuilder> getRsltMsgFieldBuilder() {
				if (rsltMsgBuilder_ == null) {
					rsltMsgBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<net.zdsoft.officework.mqreceive.Comm.TriggerResult, net.zdsoft.officework.mqreceive.Comm.TriggerResult.Builder, net.zdsoft.officework.mqreceive.Comm.TriggerResultOrBuilder>(
							rsltMsg_,
							((bitField0_ & 0x00020000) == 0x00020000),
							getParentForChildren(), isClean());
					rsltMsg_ = null;
				}
				return rsltMsgBuilder_;
			}

			private java.util.List<net.zdsoft.officework.mqreceive.Comm.CommEventTrig> trigInfo_ = java.util.Collections
					.emptyList();

			private void ensureTrigInfoIsMutable() {
				if (!((bitField0_ & 0x00040000) == 0x00040000)) {
					trigInfo_ = new java.util.ArrayList<net.zdsoft.officework.mqreceive.Comm.CommEventTrig>(
							trigInfo_);
					bitField0_ |= 0x00040000;
				}
			}

			private com.google.protobuf.RepeatedFieldBuilder<net.zdsoft.officework.mqreceive.Comm.CommEventTrig, net.zdsoft.officework.mqreceive.Comm.CommEventTrig.Builder, net.zdsoft.officework.mqreceive.Comm.CommEventTrigOrBuilder> trigInfoBuilder_;

			/**
			 * <code>repeated .net.zdsoft.officework.mqreceive.CommEventTrig trig_info = 34;</code>
			 *
			 * <pre>
			 * 联动信息，目前包含客户端联动、预案
			 * </pre>
			 */
			public java.util.List<net.zdsoft.officework.mqreceive.Comm.CommEventTrig> getTrigInfoList() {
				if (trigInfoBuilder_ == null) {
					return java.util.Collections.unmodifiableList(trigInfo_);
				} else {
					return trigInfoBuilder_.getMessageList();
				}
			}

			/**
			 * <code>repeated .net.zdsoft.officework.mqreceive.CommEventTrig trig_info = 34;</code>
			 *
			 * <pre>
			 * 联动信息，目前包含客户端联动、预案
			 * </pre>
			 */
			public int getTrigInfoCount() {
				if (trigInfoBuilder_ == null) {
					return trigInfo_.size();
				} else {
					return trigInfoBuilder_.getCount();
				}
			}

			/**
			 * <code>repeated .net.zdsoft.officework.mqreceive.CommEventTrig trig_info = 34;</code>
			 *
			 * <pre>
			 * 联动信息，目前包含客户端联动、预案
			 * </pre>
			 */
			public net.zdsoft.officework.mqreceive.Comm.CommEventTrig getTrigInfo(
					int index) {
				if (trigInfoBuilder_ == null) {
					return trigInfo_.get(index);
				} else {
					return trigInfoBuilder_.getMessage(index);
				}
			}

			/**
			 * <code>repeated .net.zdsoft.officework.mqreceive.CommEventTrig trig_info = 34;</code>
			 *
			 * <pre>
			 * 联动信息，目前包含客户端联动、预案
			 * </pre>
			 */
			public Builder setTrigInfo(int index,
					net.zdsoft.officework.mqreceive.Comm.CommEventTrig value) {
				if (trigInfoBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					ensureTrigInfoIsMutable();
					trigInfo_.set(index, value);
					onChanged();
				} else {
					trigInfoBuilder_.setMessage(index, value);
				}
				return this;
			}

			/**
			 * <code>repeated .net.zdsoft.officework.mqreceive.CommEventTrig trig_info = 34;</code>
			 *
			 * <pre>
			 * 联动信息，目前包含客户端联动、预案
			 * </pre>
			 */
			public Builder setTrigInfo(
					int index,
					net.zdsoft.officework.mqreceive.Comm.CommEventTrig.Builder builderForValue) {
				if (trigInfoBuilder_ == null) {
					ensureTrigInfoIsMutable();
					trigInfo_.set(index, builderForValue.build());
					onChanged();
				} else {
					trigInfoBuilder_.setMessage(index, builderForValue.build());
				}
				return this;
			}

			/**
			 * <code>repeated .net.zdsoft.officework.mqreceive.CommEventTrig trig_info = 34;</code>
			 *
			 * <pre>
			 * 联动信息，目前包含客户端联动、预案
			 * </pre>
			 */
			public Builder addTrigInfo(
					net.zdsoft.officework.mqreceive.Comm.CommEventTrig value) {
				if (trigInfoBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					ensureTrigInfoIsMutable();
					trigInfo_.add(value);
					onChanged();
				} else {
					trigInfoBuilder_.addMessage(value);
				}
				return this;
			}

			/**
			 * <code>repeated .net.zdsoft.officework.mqreceive.CommEventTrig trig_info = 34;</code>
			 *
			 * <pre>
			 * 联动信息，目前包含客户端联动、预案
			 * </pre>
			 */
			public Builder addTrigInfo(int index,
					net.zdsoft.officework.mqreceive.Comm.CommEventTrig value) {
				if (trigInfoBuilder_ == null) {
					if (value == null) {
						throw new NullPointerException();
					}
					ensureTrigInfoIsMutable();
					trigInfo_.add(index, value);
					onChanged();
				} else {
					trigInfoBuilder_.addMessage(index, value);
				}
				return this;
			}

			/**
			 * <code>repeated .net.zdsoft.officework.mqreceive.CommEventTrig trig_info = 34;</code>
			 *
			 * <pre>
			 * 联动信息，目前包含客户端联动、预案
			 * </pre>
			 */
			public Builder addTrigInfo(
					net.zdsoft.officework.mqreceive.Comm.CommEventTrig.Builder builderForValue) {
				if (trigInfoBuilder_ == null) {
					ensureTrigInfoIsMutable();
					trigInfo_.add(builderForValue.build());
					onChanged();
				} else {
					trigInfoBuilder_.addMessage(builderForValue.build());
				}
				return this;
			}

			/**
			 * <code>repeated .net.zdsoft.officework.mqreceive.CommEventTrig trig_info = 34;</code>
			 *
			 * <pre>
			 * 联动信息，目前包含客户端联动、预案
			 * </pre>
			 */
			public Builder addTrigInfo(
					int index,
					net.zdsoft.officework.mqreceive.Comm.CommEventTrig.Builder builderForValue) {
				if (trigInfoBuilder_ == null) {
					ensureTrigInfoIsMutable();
					trigInfo_.add(index, builderForValue.build());
					onChanged();
				} else {
					trigInfoBuilder_.addMessage(index, builderForValue.build());
				}
				return this;
			}

			/**
			 * <code>repeated .net.zdsoft.officework.mqreceive.CommEventTrig trig_info = 34;</code>
			 *
			 * <pre>
			 * 联动信息，目前包含客户端联动、预案
			 * </pre>
			 */
			public Builder addAllTrigInfo(
					java.lang.Iterable<? extends net.zdsoft.officework.mqreceive.Comm.CommEventTrig> values) {
				if (trigInfoBuilder_ == null) {
					ensureTrigInfoIsMutable();
					com.google.protobuf.AbstractMessageLite.Builder.addAll(
							values, trigInfo_);
					onChanged();
				} else {
					trigInfoBuilder_.addAllMessages(values);
				}
				return this;
			}

			/**
			 * <code>repeated .net.zdsoft.officework.mqreceive.CommEventTrig trig_info = 34;</code>
			 *
			 * <pre>
			 * 联动信息，目前包含客户端联动、预案
			 * </pre>
			 */
			public Builder clearTrigInfo() {
				if (trigInfoBuilder_ == null) {
					trigInfo_ = java.util.Collections.emptyList();
					bitField0_ = (bitField0_ & ~0x00040000);
					onChanged();
				} else {
					trigInfoBuilder_.clear();
				}
				return this;
			}

			/**
			 * <code>repeated .net.zdsoft.officework.mqreceive.CommEventTrig trig_info = 34;</code>
			 *
			 * <pre>
			 * 联动信息，目前包含客户端联动、预案
			 * </pre>
			 */
			public Builder removeTrigInfo(int index) {
				if (trigInfoBuilder_ == null) {
					ensureTrigInfoIsMutable();
					trigInfo_.remove(index);
					onChanged();
				} else {
					trigInfoBuilder_.remove(index);
				}
				return this;
			}

			/**
			 * <code>repeated .net.zdsoft.officework.mqreceive.CommEventTrig trig_info = 34;</code>
			 *
			 * <pre>
			 * 联动信息，目前包含客户端联动、预案
			 * </pre>
			 */
			public net.zdsoft.officework.mqreceive.Comm.CommEventTrig.Builder getTrigInfoBuilder(
					int index) {
				return getTrigInfoFieldBuilder().getBuilder(index);
			}

			/**
			 * <code>repeated .net.zdsoft.officework.mqreceive.CommEventTrig trig_info = 34;</code>
			 *
			 * <pre>
			 * 联动信息，目前包含客户端联动、预案
			 * </pre>
			 */
			public net.zdsoft.officework.mqreceive.Comm.CommEventTrigOrBuilder getTrigInfoOrBuilder(
					int index) {
				if (trigInfoBuilder_ == null) {
					return trigInfo_.get(index);
				} else {
					return trigInfoBuilder_.getMessageOrBuilder(index);
				}
			}

			/**
			 * <code>repeated .net.zdsoft.officework.mqreceive.CommEventTrig trig_info = 34;</code>
			 *
			 * <pre>
			 * 联动信息，目前包含客户端联动、预案
			 * </pre>
			 */
			public java.util.List<? extends net.zdsoft.officework.mqreceive.Comm.CommEventTrigOrBuilder> getTrigInfoOrBuilderList() {
				if (trigInfoBuilder_ != null) {
					return trigInfoBuilder_.getMessageOrBuilderList();
				} else {
					return java.util.Collections.unmodifiableList(trigInfo_);
				}
			}

			/**
			 * <code>repeated .net.zdsoft.officework.mqreceive.CommEventTrig trig_info = 34;</code>
			 *
			 * <pre>
			 * 联动信息，目前包含客户端联动、预案
			 * </pre>
			 */
			public net.zdsoft.officework.mqreceive.Comm.CommEventTrig.Builder addTrigInfoBuilder() {
				return getTrigInfoFieldBuilder().addBuilder(
						net.zdsoft.officework.mqreceive.Comm.CommEventTrig
								.getDefaultInstance());
			}

			/**
			 * <code>repeated .net.zdsoft.officework.mqreceive.CommEventTrig trig_info = 34;</code>
			 *
			 * <pre>
			 * 联动信息，目前包含客户端联动、预案
			 * </pre>
			 */
			public net.zdsoft.officework.mqreceive.Comm.CommEventTrig.Builder addTrigInfoBuilder(
					int index) {
				return getTrigInfoFieldBuilder().addBuilder(
						index,
						net.zdsoft.officework.mqreceive.Comm.CommEventTrig
								.getDefaultInstance());
			}

			/**
			 * <code>repeated .net.zdsoft.officework.mqreceive.CommEventTrig trig_info = 34;</code>
			 *
			 * <pre>
			 * 联动信息，目前包含客户端联动、预案
			 * </pre>
			 */
			public java.util.List<net.zdsoft.officework.mqreceive.Comm.CommEventTrig.Builder> getTrigInfoBuilderList() {
				return getTrigInfoFieldBuilder().getBuilderList();
			}

			private com.google.protobuf.RepeatedFieldBuilder<net.zdsoft.officework.mqreceive.Comm.CommEventTrig, net.zdsoft.officework.mqreceive.Comm.CommEventTrig.Builder, net.zdsoft.officework.mqreceive.Comm.CommEventTrigOrBuilder> getTrigInfoFieldBuilder() {
				if (trigInfoBuilder_ == null) {
					trigInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<net.zdsoft.officework.mqreceive.Comm.CommEventTrig, net.zdsoft.officework.mqreceive.Comm.CommEventTrig.Builder, net.zdsoft.officework.mqreceive.Comm.CommEventTrigOrBuilder>(
							trigInfo_,
							((bitField0_ & 0x00040000) == 0x00040000),
							getParentForChildren(), isClean());
					trigInfo_ = null;
				}
				return trigInfoBuilder_;
			}

			// @@protoc_insertion_point(builder_scope:net.zdsoft.officework.mqreceive.CommEventLog)
		}

		static {
			defaultInstance = new CommEventLog(true);
			defaultInstance.initFields();
		}

		// @@protoc_insertion_point(class_scope:net.zdsoft.officework.mqreceive.CommEventLog)
		  public String toJsonString(){
			  JSONObject json = new JSONObject();
			  for (final Map.Entry<FieldDescriptor, Object> field :
			         this.getAllFields().entrySet()) {
			    	json.put(field.getKey().getName(), field.getValue());
			    }
			  return json.toJSONString();
		  }
	}

	private static final com.google.protobuf.Descriptors.Descriptor internal_static_net_zdsoft_officework_mqreceive_CommEventLog_descriptor;
	private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_net_zdsoft_officework_mqreceive_CommEventLog_fieldAccessorTable;

	public static com.google.protobuf.Descriptors.FileDescriptor getDescriptor() {
		return descriptor;
	}

	private static com.google.protobuf.Descriptors.FileDescriptor descriptor;
	static {
		java.lang.String[] descriptorData = {
				"\n\017event_dis.proto\022\037net.zdsoft.officework"
						+ ".mqreceive\032\ncomm.proto\"\343\003\n\014CommEventLog\022"
						+ "\016\n\006log_id\030\001 \002(\t\022\023\n\013event_state\030\002 \002(\005\022\023\n\013"
						+ "event_level\030\003 \001(\005\022\020\n\010unit_idx\030\004 \001(\t\022\022\n\ne"
						+ "vent_type\030\005 \001(\005\022\027\n\017event_type_name\030\006 \001(\t"
						+ "\022\024\n\014sub_sys_type\030\007 \001(\005\022\022\n\nevent_name\030\010 \001"
						+ "(\t\022\022\n\nstart_time\030\t \001(\t\022\021\n\tstop_time\030\n \001("
						+ "\t\022\022\n\nsource_idx\030\013 \001(\t\022\023\n\013source_type\030\014 \001"
						+ "(\005\022\023\n\013source_name\030\r \001(\t\022\017\n\007log_txt\030\016 \001(\t"
						+ "\022\022\n\nregion_idx\030\017 \001(\t\022\020\n\010ext_info\030\024 \001(\014\022\017",
				"\n\007user_id\030\025 \003(\005\022@\n\010rslt_msg\030! \003(\0132..net."
						+ "zdsoft.officework.mqreceive.TriggerResul"
						+ "t\022A\n\ttrig_info\030\" \003(\0132..net.zdsoft.office"
						+ "work.mqreceive.CommEventTrig" };
		com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner = new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
			public com.google.protobuf.ExtensionRegistry assignDescriptors(
					com.google.protobuf.Descriptors.FileDescriptor root) {
				descriptor = root;
				return null;
			}
		};
		com.google.protobuf.Descriptors.FileDescriptor
				.internalBuildGeneratedFileFrom(
						descriptorData,
						new com.google.protobuf.Descriptors.FileDescriptor[] { net.zdsoft.officework.mqreceive.Comm
								.getDescriptor(), }, assigner);
		internal_static_net_zdsoft_officework_mqreceive_CommEventLog_descriptor = getDescriptor()
				.getMessageTypes().get(0);
		internal_static_net_zdsoft_officework_mqreceive_CommEventLog_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
				internal_static_net_zdsoft_officework_mqreceive_CommEventLog_descriptor,
				new java.lang.String[] { "LogId", "EventState", "EventLevel",
						"UnitIdx", "EventType", "EventTypeName", "SubSysType",
						"EventName", "StartTime", "StopTime", "SourceIdx",
						"SourceType", "SourceName", "LogTxt", "RegionIdx",
						"ExtInfo", "UserId", "RsltMsg", "TrigInfo", });
		net.zdsoft.officework.mqreceive.Comm.getDescriptor();
	}

	// @@protoc_insertion_point(outer_class_scope)
}
