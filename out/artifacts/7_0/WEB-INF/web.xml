<web-app id="WebApp_ID" version="2.4"
	xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee
 
http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

	<display-name>Zdsoft Spring MVC</display-name>
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>utf-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>xss</filter-name>
		<filter-class>net.zdsoft.framework.xss.XssFilter</filter-class>
		<init-param>
			<param-name>notEscapeURI</param-name>
			<param-value>
			    /pptConvertNotice,/bigdata,/system/server, /desktop/app,/desktop/userApp
			</param-value>
		</init-param>
		<init-param>
			<param-name>notEscapeParam</param-name>
			<param-value>
			   notice,content,teacherEvalContent,params,templateParams
			</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>xss</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<listener>
		<listener-class>net.zdsoft.framework.config.ClassLoaderListener</listener-class>
	</listener>
	<listener>
		<listener-class>net.zdsoft.framework.listener.SessionUserListener</listener-class>
	</listener>
	<!--<listener>-->
		<!--<listener-class>net.zdsoft.basedata.listener.SessionUserListener</listener-class>-->
	<!--</listener>-->
	<!--<listener>-->
		<!--<listener-class>net.zdsoft.adapter.HttpSessionListener</listener-class>-->
	<!--</listener>-->
	<listener>
		<listener-class>net.zdsoft.framework.config.EisContextLoaderListener</listener-class>
		<!-- <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class> -->
	</listener>
	<!-- spring加载文件，包含dubbo -->

	<listener>
		<listener-class>
			org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
		classpath*:/conf/spring/applicationContext.xml,
		classpath*:/conf/spring/custom/applicationContext-*.xml,
		classpath*:/conf/spring/center/applicationContext-*.xml,
		</param-value>
	</context-param>

	<!-- spring mvc 加载文件 -->
	<servlet>
		<servlet-name>springMvc</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath*:/conf/springmvc/*.xml</param-value>
			<!--默认:/WEB-INF/<servlet-name>-servlet.xml classpath方式:<param-value>classpath:/spring-xml/*.xml</param-value> -->
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<!-- Log4j日志 -->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>classpath:log4j.properties</param-value>
	</context-param>
	<context-param>
		<param-name>log4jRefreshInterval</param-name>
		<param-value>60000</param-value>
	</context-param>
	<context-param>
		<param-name>log4jExposeWebAppRoot</param-name>
		<param-value>false</param-value>
	</context-param>
	<listener>
		<listener-class>org.apache.logging.log4j.web.Log4jServletFilter</listener-class>
	</listener>

	<!-- Spring 刷新Introspector防止内存泄露 -->
	<listener>
		<listener-class>
			org.springframework.web.util.IntrospectorCleanupListener</listener-class>
	</listener>

	<!-- druid监控 -->
	<servlet>
		<servlet-name>DruidStatView</servlet-name>
		<servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
		<init-param>
			<!-- 允许清空统计数据 -->
			<param-name>resetEnable</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<!-- 用户名 -->
			<param-name>loginUsername</param-name>
			<param-value>druid</param-value>
		</init-param>
		<init-param>
			<!-- 密码 -->
			<param-name>loginPassword</param-name>
			<param-value>zdsoft.net</param-value>
		</init-param>
		<!-- <init-param> <param-name>allow</param-name> <param-value>128.242.127.1/24,128.242.128.1</param-value> 
			</init-param> <init-param> <param-name>deny</param-name> <param-value>128.242.127.4</param-value> 
			</init-param> -->
	</servlet>
	<servlet-mapping>
		<servlet-name>DruidStatView</servlet-name>
		<url-pattern>/druid/*</url-pattern>
	</servlet-mapping>

	<filter>
		<filter-name>DruidWebStatFilter</filter-name>
		<filter-class>com.alibaba.druid.support.http.WebStatFilter</filter-class>
		<init-param>
			<param-name>exclusions</param-name>
			<param-value>*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*</param-value>
		</init-param>
		<init-param>
	  		<param-name>sessionStatMaxCount</param-name>
	  		<param-value>1000</param-value>
	  	</init-param>
		<init-param>
  			<param-name>sessionStatEnable</param-name>
  		<param-value>false</param-value>
  	</init-param>
	</filter>
	<filter-mapping>
		<filter-name>DruidWebStatFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- configure the HiddenHttpMethodFilter,convert the post method to put 
		or delete -->
	<filter>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>HiddenHttpMethodFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!--处理富Post请求，从request.getInputStream只能获取一次请求体 -->
	<filter>    
        <filter-name>HttpServletRequestReplacedFilter</filter-name>    
        <filter-class>net.zdsoft.framework.filter.HttpServletRequestReplacedFilter</filter-class>    
    </filter>    
    <filter-mapping>    
        <filter-name>HttpServletRequestReplacedFilter</filter-name>    
        <url-pattern>/*</url-pattern>    
    </filter-mapping>  

	<!--处理富文本编辑器上图片和springMVC配置冲突问题 -->
	<filter>
		<filter-name>UeFilter</filter-name>
		<filter-class>net.zdsoft.framework.filter.UEditorFilter</filter-class>
		<init-param>
			<param-name>ueditorUrl</param-name>
			<param-value>static/ueditor/jsp/controller/controller.jsp</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>UeFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- PUT form请求，Tomcat默认只解析POST的表单 -->
	<filter>
		<filter-name>httpPutFormContentFilter</filter-name>
		<filter-class>org.springframework.web.filter.HttpPutFormContentFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>httpPutFormContentFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 处理js、css、html静态资源文件版本号控制过滤器（一般手机端相关的文件会用到） -->
	<filter>
		<filter-name>H5ResourceFilter</filter-name>
		<filter-class>net.zdsoft.framework.filter.H5ResourceFilter</filter-class>
		<!--是否管理所有web根目录下的静态资源文件 -->
		<!-- isOpenAll：true（管理所有，包括pc端和手机端页面，此时与mobileFilterPaths配置无关） -->
		<!-- isOpenAll：false（管理手机端相关页面，即mobileFilterPaths所配置的目录相关的资源文件） -->
		<init-param>
			<param-name>isOpenAll</param-name>
			<param-value>false</param-value>
		</init-param>
		<!-- 手机端相关目录配置 -->
		<init-param>
			<param-name>mobileFilterPaths</param-name>
			<param-value>
			    /static/mui/,/studevelop/mobile/,
			</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>H5ResourceFilter</filter-name>
		<url-pattern>*.html</url-pattern>
		<url-pattern>*.js</url-pattern>
		<url-pattern>*.css</url-pattern>
	</filter-mapping>

	<!-- 静态文件不走拦截器 -->
	<servlet-mapping>
		<servlet-name>default</servlet-name>
		<url-pattern>*.png</url-pattern>
		<url-pattern>*.gif</url-pattern>
		<url-pattern>*.map</url-pattern>
		<url-pattern>*.ico</url-pattern>
		<url-pattern>*.jpg</url-pattern>
		<url-pattern>*.js</url-pattern>
		<url-pattern>*.css</url-pattern>
		<url-pattern>*.woff</url-pattern>
		<url-pattern>*.leff</url-pattern>
		<url-pattern>*.jar</url-pattern>
		<url-pattern>*.tff</url-pattern>
		<url-pattern>*.swf</url-pattern>
		<url-pattern>*.json</url-pattern>
		<url-pattern>*.svg</url-pattern>
		<url-pattern>*.eot</url-pattern>
		<url-pattern>*.woff2</url-pattern>
		<url-pattern>*.icon</url-pattern>
		<url-pattern>*.exe</url-pattern>
		<url-pattern>*.ttf</url-pattern>
		<url-pattern>*.mp3</url-pattern>
	</servlet-mapping>
    
    <!--定义一个cxf的servlet-->
	<servlet>
		<servlet-name>CXFServlet</servlet-name>
		<servlet-class>org.apache.cxf.transport.servlet.CXFServlet</servlet-class>
	</servlet>
	
	<servlet-mapping>
		<servlet-name>CXFServlet</servlet-name>
		<url-pattern>/webservice/*</url-pattern>
	</servlet-mapping>
	<!-- WebService核心处理类 -->
	<servlet>
		<servlet-name>AxisServlet</servlet-name>
		<servlet-class>org.apache.axis.transport.http.AxisServlet</servlet-class>
	</servlet>
	
	<servlet-mapping>
		<servlet-name>AxisServlet</servlet-name>
	<url-pattern>/services/*</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>springMvc</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>


	<!-- <error-page> <error-code>404</error-code> <location>/WEB-INF/404.ftl</location> 
		</error-page> <error-page> <exception-type>java.lang.Exception</exception-type> 
		<location>/ap/ex/exception</location> </error-page> -->
</web-app>