/*
 * Copyright 2010 Red Hat, Inc. and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package net.zdsoft.newgkelective.data.optaplanner.solver;
    dialect "java"

import org.optaplanner.core.api.score.buildin.bendable.*;

//import function net.zdsoft.newgkelective.data.optaplanner.domain.sectioning.CGCourseSection.countSharedStudents;

import net.zdsoft.newgkelective.data.optaplanner.domain.batch.*;
import function net.zdsoft.newgkelective.data.optaplanner.func.BatchFunctions.*;

import java.util.List;
import java.util.Set;

global BendableScoreHolder scoreHolder;

//global HardSoftScoreHolder scoreHolder;


// ############################################################################
// Hard constraints
// ############################################################################

// 每个批次点的 时间不能重叠
rule "rule1"
	when
		BatchLecture($id1:id, $batchEntity1 : batchEntity, $period1 : period)
		BatchLecture(id > $id1, $period1 == period)
	then
		scoreHolder.addHardConstraintMatch(kcontext, 0, -1);
end
// 批次 课时均衡；分布在不同的天之内； 两节课的批次 点分散一些
/**/
rule "rule2"
	when
		$lectureList : List(size > 1)
		from accumulate(
			$lecture : BatchLecture(),
            collectList($lecture)
		)
	then
		int $score = getWorkBlanceScore($lectureList);
		scoreHolder.addHardConstraintMatch(kcontext, 1, -1* $score);
end

// ############################################################################
// Soft constraints
// ############################################################################
//尽量在 5天（工作日） 内均衡；每天的 批次课时 均衡
rule "soft rule 1"
	when
		workdayCount : Integer()
		$lectureList : List(size > 1)
		from accumulate(
			$lecture : BatchLecture(),
            collectList($lecture)
		)
	then
	    int $score = getWorkDayPlanScore($lectureList,workdayCount);
		scoreHolder.addSoftConstraintMatch(kcontext, 0, -1 * $score);
end

// 批次尽量分布在下午
rule "soft rule 2"
	when
		BatchLecture(period.timeslotIndex < 8, $timeslotIndex : period.timeslotIndex)
	then
		scoreHolder.addSoftConstraintMatch(kcontext, 1, -1 * (8- $timeslotIndex));
end
