/*
 * Copyright 2010 Red Hat, Inc. and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package net.zdsoft.newgkelective.data.optaplanner.solver;
    dialect "java"

import org.optaplanner.core.api.score.buildin.bendable.*;

//import function net.zdsoft.newgkelective.data.optaplanner.domain.sectioning.CGCourseSection.countSharedStudents;

import net.zdsoft.newgkelective.data.optaplanner.domain.biweekly.*;
import function net.zdsoft.newgkelective.data.optaplanner.func.WeekFunctions.*;

import java.util.List;

global BendableScoreHolder scoreHolder;

//global HardSoftScoreHolder scoreHolder;


// ############################################################################
// Hard constraints
// ############################################################################

//
rule "rule1"
	when
		Constants($coupleWeekIdMap : coupleWeekIdMap)
		$sectionList : List(size > 1)
		from accumulate(
			$section : Section(),
            collectList( $section)
		)
	then
	    int $score = getSectionWeeklyScore($sectionList,$coupleWeekIdMap);
		scoreHolder.addHardConstraintMatch(kcontext, 0, -1 * $score);
end

// ############################################################################
// Soft constraints
// ############################################################################

rule "rule2"
	when
		$sectionList : List(size > 1)
		from accumulate(
			$section : Section(),
            collectList( $section)
		)
	then
	    int $score = getTeacherWeeklyScore($sectionList);
		scoreHolder.addSoftConstraintMatch(kcontext, 0, -1 * $score);
end
